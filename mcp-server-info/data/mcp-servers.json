{
    "code": 0,
    "msg": "OK",
    "requestId": "848dd6bc-e324-41aa-a3e0-a6bcda35cf50",
    "data": {
        "total_count": 222,
        "mcp_servers": [
            {
                "id": "mcp10002",
                "mcpid": "github.com/modelcontextprotocol/servers-archived/tree/main/src/github",
                "name": "GitHub MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/37b11e44afcf7a6f35e406cef55abd7e.png",
                "description_en": "Deep integration with the GitHub API interface supports intelligent operations such as code repository management and automated reviews. Developers can swiftly connect with the GitHub ecosystem through standardized protocols, enabling the intelligent upgrade of CI/CD processes, thereby enhancing research and development efficiency.",
                "description_zh": "深度集成GitHub API接口，支持代码仓库管理、自动化审查等智能操作。开发者可通过标准化协议快速对接GitHub生态，实现CI/CD流程智能化升级，提升研发效能。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10002?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-github"
                    ],
                    "env": {
                        "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10011",
                "mcpid": "github.com/TencentEdgeOne/edgeone-pages-mcp/tree/main",
                "name": "EdgeOne Pages MCP",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/bce469329fd4f02cbab57d423f665432.jpeg",
                "description_en": "The MCP server based on EdgeOne Pages supports code deployment as an online page.",
                "description_zh": "基于 EdgeOne Pages 的 MCP 服务器，支持代码部署为在线页面。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10011?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "edgeone-pages-mcp"
                    ],
                    "env": {
                        "EDGEONE_PAGES_API_TOKEN": "",
                        "EDGEONE_PAGES_PROJECT_NAME": ""
                    }
                },
                "categories": [
                    "腾讯产品MCP",
                    "开发者工具"
                ],
                "categories_en": [
                    "Tencent Products MCP",
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10012",
                "mcpid": "github.com/modelcontextprotocol/servers/tree/main/src/time",
                "name": "Time MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/1c1d0c1208ced16d51010690aff008e6.jpg",
                "description_en": "A Model Context Protocol (MCP) service that offers time and timezone conversion functionalities. This service enables large language models (LLMs) to retrieve current time information, perform timezone conversions using IANA timezone names, and supports automatic detection of the system's timezone.",
                "description_zh": "一个提供时间和时区转换功能的模型上下文协议（MCP）服务。该服务使大型语言模型（LLMs）能够获取当前时间信息，并使用IANA时区名称进行时区转换，同时支持自动检测系统时区。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10012?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-server-time",
                        "--local-timezone=Asia/Shanghai"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10013",
                "mcpid": "github.com/modelcontextprotocol/servers-archived/tree/main/src/gitlab",
                "name": "GitLab MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/a652f6b7ce5571306271f3b7febeec69.png",
                "description_en": "The MCP server for GitLab API enables project management, file operations, and other functionalities.",
                "description_zh": "用于 GitLab API 的 MCP 服务器，可实现项目管理、文件操作等功能。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10013?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-gitlab"
                    ],
                    "env": {
                        "GITLAB_API_URL": "https://gitlab.com/api/v4",
                        "GITLAB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10014",
                "mcpid": "github.com/chatmcp/mcp-server-flomo",
                "name": "mcp-server-flomo MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/ba96e9ce23d3e71e636cfd25159e92fe.png",
                "description_en": "A TypeScript-based MCP server that enables you to write note content into Flomo notes.",
                "description_zh": "基于 TypeScript 的 MCP 服务器，可助力你将笔记内容写入Flomo笔记。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10014?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@chatmcp/mcp-server-flomo"
                    ],
                    "env": {
                        "FLOMO_API_URL": "https://flomoapp.com/iwh/xxx/xxx/"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10016",
                "mcpid": "github.com/ppl-ai/modelcontextprotocol",
                "name": "Perplexity Ask MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/f7ad60a16e5f3e628fffa798da139d1c.png",
                "description_en": "The MCP server integrated with the Sonar API can provide Claude with real-time, comprehensive research capabilities across the entire network.",
                "description_zh": "集成了Sonar API 的MCP服务器，可以为Claude提供实时且全网范围的研究能力。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10016?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "server-perplexity-ask"
                    ],
                    "env": {
                        "PERPLEXITY_API_KEY": "YOUR_API_KEY_HERE"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10017",
                "mcpid": "github.com/exa-labs/exa-mcp-server",
                "name": "Exa MCP Server 🔍",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/2f56bcf1235578474dfbecbdaea4b23a.png",
                "description_en": "The Model Context Protocol (MCP) server enables AI assistants like Claude to perform web searches using the Exa AI search API. This setup allows AI models to access real-time web information in a secure and controlled manner.",
                "description_zh": "模型上下文协议（MCP）服务器使得像Claude这样的AI助手能够使用Exa AI搜索API进行网页搜索。该设置允许AI模型以安全和受控的方式获取实时网页信息。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10017?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "exa-mcp-server"
                    ],
                    "env": {
                        "EXA_API_KEY": "your-api-key-here"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10019",
                "mcpid": "github.com/mastergo-design/mastergo-magic-mcp",
                "name": "MasterGo Magic MCP",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/f1208901b46988d7e1cb87aafff1fedd.png",
                "description_en": "MasterGo Magic MCP is an independent MCP (Model Context Protocol) service designed to connect the MasterGo design tool with AI models. It enables AI models to directly retrieve DSL data from MasterGo design files.",
                "description_zh": "MasterGo Magic MCP是一个独立的MCP（模型上下文协议）服务，旨在将MasterGo设计工具与AI模型连接起来。它使AI模型能够直接从MasterGo设计文件中检索DSL数据。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10019?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@mastergo/magic-mcp",
                        "--token=<MG_MCP_TOKEN>",
                        "--url=https://mastergo.com"
                    ]
                },
                "categories": [
                    "设计与创意"
                ],
                "categories_en": [
                    "Design and Creativity"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10020",
                "mcpid": "github.com/modelcontextprotocol/servers/tree/main/src/filesystem",
                "name": "Filesystem MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/71aa6db7007a7a5ccd1ec4c66f06f233.jpg",
                "description_en": "Node.js server implementing the Model Context Protocol (MCP) for file system operations",
                "description_zh": "Node.js 服务器，实现用于文件系统操作的模型上下文协议（MCP）",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10020?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-filesystem",
                        "/Users/username/Desktop",
                        "/path/to/other/allowed/dir"
                    ]
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10022",
                "mcpid": "github.com/modelcontextprotocol/servers-archived/tree/main/src/slack",
                "name": "Slack MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/042260b5fbc5cf86a9f87ee05ba8e648.png",
                "description_en": "Supports Slack API, enabling Claude to interact with Slack workspaces.",
                "description_zh": "支持 Slack API，提供Claude与Slack工作区交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10022?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-slack"
                    ],
                    "env": {
                        "SLACK_BOT_TOKEN": "xoxb-your-bot-token",
                        "SLACK_CHANNEL_IDS": "C01234567, C76543210",
                        "SLACK_TEAM_ID": "T01234567"
                    }
                },
                "categories": [
                    "社交媒体"
                ],
                "categories_en": [
                    "Social Media"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10023",
                "mcpid": "github.com/ahujasid/ableton-mcp",
                "name": "AbletonMCP - Ableton Live Model Context Protocol Integration",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/209168abb7005bcabed16a18c6142e5c.jpg",
                "description_en": "Connecting Ableton Live to Claude AI enables Claude to directly interact with and control Ableton Live. This integration facilitates instant assistance in music production, track creation, and live session operations.",
                "description_zh": "连接Ableton Live到Claude AI，允许Claude直接与Ableton Live进行交互和控制。集成即时辅助音乐制作，轨道创建和现场会话操作。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10023?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "ableton-mcp"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10024",
                "mcpid": "github.com/modelcontextprotocol/servers-archived/tree/main/src/redis",
                "name": "Redis",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/dc650eefccc556eef2403e8c64419ec1.png",
                "description_en": "A Model Context Protocol (MCP) service that provides access to the Redis database. This service enables large language models (LLMs) to interact with the Redis key-value store through a set of standardized tools.",
                "description_zh": "一个提供对Redis数据库访问的模型上下文协议（MCP）服务。该服务使大型语言模型（LLMs）能够通过一套标准化工具与Redis键值存储进行交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10024?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-redis",
                        "redis://localhost:6379"
                    ]
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10027",
                "mcpid": "github.com/21st-dev/magic-mcp",
                "name": "21st.dev Magic AI Agent",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/9f31c7e625255642dd2f1c759713802e.png",
                "description_en": "The Magic Component Platform is a powerful AI-driven tool that enables developers to swiftly create aesthetically pleasing and modern UI components based on natural language descriptions. It seamlessly integrates with mainstream IDEs, offering a streamlined workflow for UI development.",
                "description_zh": "魔法组件平台是强大的人工智能驱动工具，能助开发者依据自然语言描述快速创建美观现代的 UI 组件，可与主流 IDE 无缝集成，为 UI 开发提供简化工作流程。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10027?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@smithery/cli@latest",
                        "install",
                        "@21st-dev/magic-mcp",
                        "--client",
                        "windsurf"
                    ],
                    "env": {
                        "TWENTY_FIRST_API_KEY": "your-api-key"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10029",
                "mcpid": "github.com/modelcontextprotocol/servers/tree/main/src/everything",
                "name": "Everything MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/26925f01b9ae22d0d7e637b0b41121bd.png",
                "description_en": "The purpose is to demonstrate all the functionalities of the MCP protocol. It is not intended to be a practical server but rather serves as a testing server for developers of MCP clients. This server implements features such as prompts, tools, resources, sampling, and more to showcase the capabilities of MCP.",
                "description_zh": "旨在展示MCP协议的所有功能。它并不旨在成为一个实用的服务器，而是为MCP客户端的开发者提供的测试服务器。该服务器实现了提示、工具、资源、采样等功能，以展示MCP的能力。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10029?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-everything"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10030",
                "mcpid": "github.com/modelcontextprotocol/servers-archived/tree/main/src/gdrive",
                "name": "Google Drive server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/8300cd142a13b9b481fa7265638c2066.png",
                "description_en": "Supports listing, reading, and searching operations for files on Google Drive.",
                "description_zh": "支持对谷歌云盘文件进行列表查看、读取和搜索操作。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10030?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-gdrive"
                    ]
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10034",
                "mcpid": "github.com/modelcontextprotocol/servers-archived/tree/main/src/brave-search",
                "name": "Brave Search MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/e2b5f9343f3745302b6972bfdbd5dc33.png",
                "description_en": "Integrated with the Brave Search API, it possesses both web search and local search capabilities.",
                "description_zh": "集成了Brave搜索API，具备网络搜索和本地搜索能力。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10034?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-brave-search"
                    ],
                    "env": {
                        "BRAVE_API_KEY": "YOUR_API_KEY_HERE"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10035",
                "mcpid": "github.com/modelcontextprotocol/servers-archived/tree/main/src/sentry",
                "name": "mcp-server-sentry: A Sentry MCP server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/26e4619b2103e0b8ae32d291d92ecef8.png",
                "description_en": "",
                "description_zh": "此服务器提供了用于查看来自您的 Sentry 账户的错误报告、堆栈跟踪和其他调试信息的工具。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10035?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-server-sentry",
                        "--auth-token",
                        "YOUR_SENTRY_TOKEN"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10038",
                "mcpid": "github.com/modelcontextprotocol/servers-archived/tree/main/src/puppeteer",
                "name": "Puppeteer",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/26925f01b9ae22d0d7e637b0b41121bd.png",
                "description_en": "An MCP server that utilizes Puppeteer to provide browser automation capabilities, enabling LLMs to interact with web pages, take screenshots, and execute JavaScript code in a real browser environment.",
                "description_zh": "一个利用 Puppeteer 提供浏览器自动化功能的MCP服务器，可让LLMs与网页交互，进行截图，并在真实的浏览器环境中执行 JavaScript 代码。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10038?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-puppeteer"
                    ]
                },
                "categories": [
                    "浏览器自动化"
                ],
                "categories_en": [
                    "Browser Automation"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10041",
                "mcpid": "github.com/modelcontextprotocol/servers-archived/tree/main/src/everart",
                "name": "EverArt MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An image generation server designed for Claude Desktop, which utilizes EverArt's API to facilitate the creation of images.",
                "description_zh": "一款供Claude Desktop使用的图像生成服务器，该服务器借助EverArt的API实现图像生成功能。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10041?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-everart"
                    ],
                    "env": {
                        "EVERART_API_KEY": "your_key_here"
                    }
                },
                "categories": [
                    "设计与创意"
                ],
                "categories_en": [
                    "Design and Creativity"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10043",
                "mcpid": "github.com/noahlozevski/mcp-idb",
                "name": "mcp-idb",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The integration between the Model Context Protocol (MCP) and Facebook's iOS development bridging tool (idb) enables the automation of iOS device management and test execution through natural language.",
                "description_zh": "Model Context Protocol（MCP）与Facebook的iOS开发桥接工具（idb）之间的集成，使得通过自然语言实现iOS设备管理自动化和测试执行成为可能。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10043?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@noahlozevski/idb"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10044",
                "mcpid": "github.com/graphlit/graphlit-mcp-server",
                "name": "Model Context Protocol (MCP) Server for Graphlit Platform",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/a3eb5d359875ffd9676a34ce988a6d1d.png",
                "description_en": "The Model Context Protocol (MCP) server facilitates the integration between MCP clients and the Graphlit service.",
                "description_zh": "模型上下文协议（MCP）服务器实现了 MCP 客户端与 Graphlit 服务之间的集成。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10044?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "graphlit-mcp-server"
                    ],
                    "env": {
                        "DISCORD_BOT_TOKEN": "your-discord-bot-token",
                        "GITHUB_PERSONAL_ACCESS_TOKEN": "your-github-pat",
                        "GOOGLE_EMAIL_CLIENT_ID": "your-google-client-id",
                        "GOOGLE_EMAIL_CLIENT_SECRET": "your-google-client-secret",
                        "GOOGLE_EMAIL_REFRESH_TOKEN": "your-google-refresh-token",
                        "GRAPHLIT_ENVIRONMENT_ID": "your-environment-id",
                        "GRAPHLIT_JWT_SECRET": "your-jwt-secret",
                        "GRAPHLIT_ORGANIZATION_ID": "your-organization-id",
                        "JIRA_EMAIL": "your-jira-email",
                        "JIRA_TOKEN": "your-jira-token",
                        "LINEAR_API_KEY": "your-linear-api-key",
                        "NOTION_API_KEY": "your-notion-api-key",
                        "NOTION_DATABASE_ID": "your-notion-database-id",
                        "SLACK_BOT_TOKEN": "your-slack-bot-token",
                        "TWITTER_TOKEN": "your-twitter-token"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10047",
                "mcpid": "github.com/hyperbrowserai/mcp",
                "name": "Hyperbrowser MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/ec8b52d7db02ec0c9a48d5aa628eaa5a.png",
                "description_en": "This is the Model Context Protocol (MCP) server for Hyperbrowser. It offers a variety of tools for scraping, extracting structured data, and crawling web pages. Additionally, it provides convenient access to general browser proxies, such as OpenAI's CUA, Anthropic's Claude for computer usage, and browser usage.",
                "description_zh": "这是Hyperbrowser的模型上下文协议（MCP）服务器。它提供了各种工具用于抓取、提取结构化数据和爬取网页。它还提供了对通用浏览器代理的便捷访问，如OpenAI的CUA、Anthropic的Claude计算机使用和浏览器使用。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10047?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "hyperbrowser-mcp"
                    ],
                    "env": {
                        "HYPERBROWSER_API_KEY": "YOUR-API-KEY"
                    }
                },
                "categories": [
                    "内容抓取"
                ],
                "categories_en": [
                    "Content Scraping"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10049",
                "mcpid": "github.com/adenot/mcp-google-search",
                "name": "mcp-google-server A MCP Server for Google Custom Search and Webpage Reading",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The MCP server utilizes the Google Custom Search API to provide web search functionality and is equipped with web content extraction capabilities.",
                "description_zh": "利用谷歌自定义搜索 API 提供网络搜索功能，并具备网页内容提取功能的MCP服务器。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10049?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@adenot/mcp-google-search"
                    ],
                    "env": {
                        "GOOGLE_API_KEY": "your-api-key-here",
                        "GOOGLE_SEARCH_ENGINE_ID": "your-search-engine-id-here"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10053",
                "mcpid": "github.com/integration-app/mcp-server",
                "name": "Integration App MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/3a888fe14c40d896d6511917ed46b15a.png",
                "description_en": "This is an implementation version of a Model Context Protocol (MCP) server, which provides various tool interfaces driven by the Integration App to external systems.",
                "description_zh": "这是一个模型上下文协议（MCP）服务器的实现版本，它对外提供了由 Integration App 驱动的各类工具接口。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10053?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@integration-app/mcp-server"
                    ],
                    "env": {
                        "INTEGRATION_APP_TOKEN": "<your-integration-app-token>",
                        "INTEGRATION_KEY": "hubspot"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10056",
                "mcpid": "github.com/kimtaeyoon83/mcp-server-youtube-transcript",
                "name": "YouTube Transcript Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "It supports extracting transcripts from YouTube videos and provides direct access to video subtitles through a simple interface.",
                "description_zh": "支持从YouTube视频中提取文字记录，并可通过简单接口提供对视频字幕的直接访问。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10056?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@kimtaeyoon83/mcp-server-youtube-transcript"
                    ]
                },
                "categories": [
                    "内容抓取"
                ],
                "categories_en": [
                    "Content Scraping"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10057",
                "mcpid": "github.com/funmula-corp/biggo-mcp-server",
                "name": "BigGo MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/cd6010dd6743d7acb8dcbc2ae9cef769.png",
                "description_en": "The MCP server, based on the APIs of the professional price comparison website BigGo, supports product search, historical price tracking, and specification comparison across multiple e-commerce platforms.",
                "description_zh": "基于专业比价网站BigGo的APIs的MCP服务器，支持多电商平台的商品搜索、历史价格追踪和规格比较。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10057?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "BigGo-MCP-Server@latest"
                    ],
                    "env": {
                        "BIGGO_MCP_SERVER_CLIENT_ID": "CLIENT_ID",
                        "BIGGO_MCP_SERVER_CLIENT_SECRET": "CLIENT_SECRET",
                        "BIGGO_MCP_SERVER_REGION": "REGION"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10058",
                "mcpid": "github.com/stripe/agent-toolkit/tree/main/modelcontextprotocol",
                "name": "Stripe Model Context Protocol",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/02175104ce36033de3472fa4a9c7ef5f.png",
                "description_en": "This server supports integration with the Stripe API through function calls. This protocol is compatible with various tools and allows interaction with different Stripe services.",
                "description_zh": "该服务器支持通过函数调用的方式与 Stripe API 进行集成。此协议支持多种工具，可与不同的 Stripe 服务进行交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10058?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@stripe/mcp",
                        "--tools=all",
                        "--api-key=STRIPE_SECRET_KEY"
                    ]
                },
                "categories": [
                    "支付与交易"
                ],
                "categories_en": [
                    "Payment and Transactions"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10059",
                "mcpid": "github.com/usegranthq/mcp-server",
                "name": "UseGrant MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/672e102eab6a8884f3d5259ae769e1b6.png",
                "description_en": "A Model Context Protocol Server, which provides tools for managing providers, clients, tenants, and access tokens through the UseGrant platform.",
                "description_zh": "一个模型上下文协议服务器，通过UseGrant平台提供管理提供商、客户端、租户和访问令牌的工具。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10059?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@usegrant/mcp-server"
                    ],
                    "env": {
                        "USEGRANT_API_KEY": "your_api_key_here"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10066",
                "mcpid": "github.com/gluneau/hive-mcp-server",
                "name": "Hive MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Through the model context protocol, the artificial intelligence assistant is enabled to interact with the Hive blockchain, thereby facilitating account information retrieval, content reading/creation, cryptocurrency transfers, and cryptographic operations.",
                "description_zh": "通过模型上下文协议，使人工智能助手能够与Hive区块链互动，从而实现账户信息检索、内容读取/创建、加密货币转账和加密操作。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10066?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@gluneau/hive-mcp-server"
                    ],
                    "env": {
                        "HIVE_ACTIVE_KEY": "your-hive-active-private-key",
                        "HIVE_MEMO_KEY": "your-hive-memo-private-key",
                        "HIVE_POSTING_KEY": "your-hive-posting-private-key",
                        "HIVE_USERNAME": "your-hive-username"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10069",
                "mcpid": "github.com/FREEZONEX/mcp-server-supos",
                "name": "supOS MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/2d2691a8b05a2b224474da4fc8a75852.png",
                "description_en": "An MCP protocol server that provides access to the supOS open API, enabling MCP-compatible clients to query the topic tree structure and detailed information.",
                "description_zh": "一个提供对supOS开放API访问的MCP协议服务器，允许与MCP兼容的客户端查询主题树结构和详细信息。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10069?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-server-supos"
                    ],
                    "env": {
                        "SUPOS_API_KEY": "<API_KEY>",
                        "SUPOS_API_URL": "<API_URL>",
                        "SUPOS_MQTT_URL": "<MQTT_URL>",
                        "SUPOS_PG_URL": "<PG_URL>"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10079",
                "mcpid": "github.com/tomekkorbak/strava-mcp-server",
                "name": "Strava MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A model context protocol server that provides language models with access to Strava API data, enabling them to query and analyze athlete activities on Strava.",
                "description_zh": "一个模型上下文协议服务器，为语言模型提供对Strava API数据的访问，使它们能够查询和分析Strava上的运动员活动。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10079?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "strava-mcp-server"
                    ],
                    "env": {
                        "STRAVA_CLIENT_ID": "YOUR_CLIENT_ID",
                        "STRAVA_CLIENT_SECRET": "YOUR_CLIENT_SECRET",
                        "STRAVA_REFRESH_TOKEN": "YOUR_REFRESH_TOKEN"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10092",
                "mcpid": "github.com/cablate/mcp-doc-forge",
                "name": "Simple Document Processing MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Offers comprehensive document processing capabilities.",
                "description_zh": "提供全面的文档处理能力。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10092?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@cablate/mcp-doc-forge"
                    ]
                },
                "categories": [
                    "文档工具"
                ],
                "categories_en": [
                    "Document Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10102",
                "mcpid": "github.com/ragieai/ragie-mcp-server",
                "name": "Ragie Model Context Protocol Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/fd06f954e86bcc680bc4d7cd0825aba5.png",
                "description_en": "An MCP server that enables AI models to retrieve information from Ragie's knowledge base through a simple \"retrieval\" tool.",
                "description_zh": "一个MCP服务器，它使AI模型能够通过简单的“检索”工具从Ragie的知识库中获取信息。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10102?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@ragieai/mcp-server",
                        "--partition",
                        "optional_partition_id"
                    ],
                    "env": {
                        "RAGIE_API_KEY": "your_api_key"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10103",
                "mcpid": "github.com/e2b-dev/mcp-server/tree/main/packages/python",
                "name": "E2B MCP Server (Python)",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/e286365df1ec513c109bbd3a90e80c00.png",
                "description_en": "The E2B MCP Server is a Python application developed by E2B, designed to execute code within a secure sandbox environment. It is built on the Model Context Protocol (MCP) and supports integration with the desktop version of Claude. Users can enable the server on different operating systems by configuring JSON files. The server communicates through standard input and output, and for debugging purposes, it is recommended to use the MCP Inspector tool, which simplifies the debugging process and provides a browser-accessible debugging interface.",
                "description_zh": "E2B MCP 服务器是一个由 E2B 开发的 Python 应用程序，用于在安全沙箱环境中执行代码。它基于模型上下文协议（MCP），支持与 Claude 桌面版集成，用户可通过配置 JSON 文件在不同操作系统上启用服务器。该服务器通过标准输入输出进行通信，调试时建议使用 MCP Inspector 工具，以简化调试过程并提供浏览器访问的调试界面。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10103?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "e2b-mcp-server"
                    ],
                    "env": {
                        "E2B_API_KEY": "${e2bApiKey}"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10104",
                "mcpid": "github.com/jwaldor/mcp-scrape-copilot",
                "name": "Puppeteer",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Enable large language models to perform browser automation tasks through Puppeteer, including web browsing, taking screenshots, and executing JavaScript.",
                "description_zh": "使大语言模型能够通过Puppeteer执行浏览器自动化任务，进行网页浏览、截屏和运行JavaScript。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10104?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-puppeteer"
                    ]
                },
                "categories": [
                    "浏览器自动化"
                ],
                "categories_en": [
                    "Browser Automation"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10105",
                "mcpid": "github.com/dcSpark/mcp-server-jupiter",
                "name": "MCP Jupiter",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/22ba4fbfc9c31cd9fdc91cca3eaa5077.png",
                "description_en": "A model context protocol server that enables Claude to execute Solana token swaps via Jupiter's API, including fetching quotes, constructing transactions, and sending swap transactions on the Solana blockchain.",
                "description_zh": "一个模型上下文协议服务器，使克劳德能够通过木星的API执行Solana代币交换，包括获取报价、构建交易和在Solana区块链上发送交换交易。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10105?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "@mcp-dockmaster/mcp-server-jupiter"
                    ]
                },
                "categories": [
                    "支付与交易"
                ],
                "categories_en": [
                    "Payment and Transactions"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10107",
                "mcpid": "github.com/rember/rember-mcp",
                "name": "Rember MCP",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/d3c38859c88eff7b53d5f76349a7f32f.png",
                "description_en": "Allow Claude to create flashcards for Rember, utilizing spaced repetition to assist users in learning and memorizing information.",
                "description_zh": "允许Claude为Rember创建flash card，通过间隔重复复习帮助用户学习和记忆信息。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10107?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@getrember/mcp",
                        "--api-key=YOUR_REMBER_API_KEY"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10113",
                "mcpid": "github.com/spences10/mcp-turso-cloud",
                "name": "mcp-turso-cloud",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "ðï¸ A Model Context Protocol (MCP) server that provides integration with the Turso database, suitable for LLMs. This server implements a two-tier authentication system for handling organizational and database-level operations, enabling seamless management and querying of the Turso database directly from LLMs.",
                "description_zh": "ðï¸ 一个提供与Turso数据库集成的模型上下文协议（MCP）服务器，适用于LLM。该服务器实现了一个两级认证系统，用于处理组织级和数据库级的操作，从而可以轻松地从LLM直接管理和查询Turso数据库。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10113?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-turso-cloud"
                    ],
                    "env": {
                        "TURSO_API_TOKEN": "your-turso-api-token",
                        "TURSO_DEFAULT_DATABASE": "optional-default-database",
                        "TURSO_ORGANIZATION": "your-organization-name"
                    }
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10114",
                "mcpid": "github.com/merajmehrabi/puppeteer-mcp-server",
                "name": "Puppeteer MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Enable browser automation through Puppeteer, supporting navigation, form interaction, and connection to active Chrome instances for comprehensive web page interaction.",
                "description_zh": "通过 Puppeteer 启用浏览器自动化，支持导航、表单交互以及连接到活动的 Chrome 实例以实现全面的网页交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10114?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "puppeteer-mcp-server"
                    ]
                },
                "categories": [
                    "浏览器自动化"
                ],
                "categories_en": [
                    "Browser Automation"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10115",
                "mcpid": "github.com/merajmehrabi/Outlook_Calendar_MCP",
                "name": "Outlook Calendar MCP Tool",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The Model Context Protocol (MCP) server enables Claude to access and manage your local Microsoft Outlook calendar (Windows only).",
                "description_zh": "模型上下文协议 (MCP) 服务器允许 Claude 访问和管理您的本地 Microsfot Outlook 日历（仅限 Windows）。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10115?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "outlook-calendar-mcp"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10116",
                "mcpid": "github.com/ivo-toby/contentful-mcp",
                "name": "Contentful MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The MCP server achieves integration with Contentful's content management API, offering comprehensive content management capabilities.",
                "description_zh": "MCP 服务器实现与 Contentful 的内容管理 API 集成，提供全面的内容管理功能。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10116?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@ivotoby/contentful-management-mcp-server"
                    ],
                    "env": {
                        "CONTENTFUL_MANAGEMENT_ACCESS_TOKEN": "<Your CMA token>"
                    }
                },
                "categories": [
                    "内容抓取"
                ],
                "categories_en": [
                    "Content Scraping"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10120",
                "mcpid": "github.com/aashari/mcp-server-atlassian-bitbucket",
                "name": "Atlassian Bitbucket MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An integrated tool that enables AI assistants like Claude to directly access and manipulate Bitbucket repositories, pull requests, and code without the need for copy/paste operations.",
                "description_zh": "一种集成工具，它使像 Claude 这样的人工智能助手能够直接访问和操作 Bitbucket 代码库、拉取请求和代码，而无需进行复制/粘贴操作。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10120?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@aashari/mcp-server-atlassian-bitbucket"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10132",
                "mcpid": "github.com/QuantGeekDev/docker-mcp",
                "name": "🐳 docker-mcp",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A robust Model Context Protocol (MCP) server designed for Docker operations, enabling seamless management of containers and composite stacks through Claude AI.",
                "description_zh": "一个强大的模型上下文协议（MCP）服务器，用于Docker操作，通过Claude AI实现容器和组合堆栈的无缝管理。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10132?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "docker-mcp"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10137",
                "mcpid": "github.com/negokaz/excel-mcp-server",
                "name": "Excel MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The MCP server, capable of reading and writing Microsoft Excel data, can handle both text values and formulas, and can also capture screen images from Excel files.",
                "description_zh": "可读写微软 Excel 数据的MCP服务器，能读写文本值与公式，还可从 Excel 文件截取屏幕图像。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10137?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "--yes",
                        "@negokaz/excel-mcp-server"
                    ],
                    "env": {
                        "EXCEL_MCP_PAGING_CELLS_LIMIT": "4000"
                    }
                },
                "categories": [
                    "文档工具"
                ],
                "categories_en": [
                    "Document Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10140",
                "mcpid": "github.com/abhishekbhakat/airflow-mcp-server",
                "name": "airflow-mcp-server: An MCP Server for controlling Airflow",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "https://github.com/abhishekbhakat/airflow-mcp-server\n\nThis content is a URL link pointing to a project repository on GitHub, named \"abhishekbhakat/airflow-mcp-server,\" which is the homepage link for this project. Since this is a link, no further translation is needed. To understand the specific content, you can visit the link to view the related code and documentation.",
                "description_zh": "https://github.com/abhishekbhakat/airflow-mcp-server\n\n这个内容是一个URL链接，指向GitHub上的一个项目仓库，名为“abhishekbhakat/airflow-mcp-server”，这是该项目的主页链接。由于这是个链接，无需进一步翻译。 若要了解具体内容，可以访问该链接查看相关代码和文档。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10140?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "airflow-mcp-server",
                        "--base-url",
                        "http://localhost:8080",
                        "--auth-token",
                        "<jwt_token>"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10145",
                "mcpid": "github.com/ducthinh993/mcp-server-endoflife",
                "name": "EOL MCP Server 📅",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "By utilizing the endoflife.date API, the AI assistant is enabled to check the end-of-life dates and support status of software, providing real-time accurate information regarding the software's lifecycle, security status, and upgrade recommendations.",
                "description_zh": "通过使用 endoflife.date API，启用 AI 助手检查软件的生命周期结束日期和支持状态，实时提供有关软件生命周期、安全状态和升级建议的准确信息。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10145?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "/path/to/eol-mcp-server/build/index.js"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10146",
                "mcpid": "github.com/run-llama/mcp-server-llamacloud",
                "name": "LlamaCloud MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/8fc9b03322d18b9d40843753d27b0e55.png",
                "description_en": "A MCP server connected to an index hosted on [LlamaCloud](https://www.llamaindex.ai/). This is a TypeScript-based MCP server that implements a connection to the index hosted on LlamaCloud.",
                "description_zh": "一个连接到[LlamaCloud](https://www.llamaindex.ai/)上托管索引的MCP服务器。这是一个基于TypeScript的MCP服务器，它实现了与LlamaCloud上托管索引的连接。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10146?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@llamaindex/mcp-server-llamacloud",
                        "--index",
                        "10k-SEC-Tesla",
                        "--description",
                        "10k SEC documents from 2023 for Tesla",
                        "--index",
                        "10k-SEC-Apple",
                        "--description",
                        "10k SEC documents from 2023 for Apple"
                    ],
                    "env": {
                        "LLAMA_CLOUD_API_KEY": "<YOUR_API_KEY>",
                        "LLAMA_CLOUD_PROJECT_NAME": "<YOUR_PROJECT_NAME>"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10149",
                "mcpid": "github.com/qianniuspace/mcp-security-audit",
                "name": "Security Audit Tool",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Audit npm package dependencies to identify security vulnerabilities, provide detailed reports and remediation recommendations, and integrate with MCP.",
                "description_zh": "审计 npm 包依赖项以查找安全漏洞，提供详细的报告和修复建议，并集成 MCP。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10149?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-security-audit"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10158",
                "mcpid": "github.com/inkdropapp/mcp-server",
                "name": "Inkdrop MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/478723386bb468390d3d44adb32e5556.png",
                "description_en": "The integration of the Inkdrop note-taking application with Claude AI is achieved through the Model Context Protocol, enabling Claude to search, read, create, and update notes within your Inkdrop database.",
                "description_zh": "通过模型上下文协议（Model Context Protocol）将 Inkdrop 笔记应用与 Claude AI 集成，允许 Claude 搜索、读取、创建和更新您 Inkdrop 数据库中的笔记。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10158?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@inkdropapp/mcp-server"
                    ],
                    "env": {
                        "INKDROP_LOCAL_PASSWORD": "your-local-server-password",
                        "INKDROP_LOCAL_SERVER_URL": "http://localhost:19840",
                        "INKDROP_LOCAL_USERNAME": "your-local-server-username"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10172",
                "mcpid": "github.com/jkawamoto/mcp-youtube-transcript",
                "name": "YouTube Transcript MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The YouTube Caption MCP Server is a tool designed for retrieving subtitles from specified YouTube videos. It offers a `get_transcript` function, enabling users to input a video URL and an optional language parameter to obtain the corresponding subtitle content. The server supports configuration and installation through Goose CLI, Goose Desktop, and Claude Desktop, with detailed installation guides provided. Additionally, it facilitates access to YouTube via proxy servers in restricted environments, ensuring the smooth retrieval of subtitles. The project is licensed under the MIT License, and its code is hosted on GitHub, making it convenient for users to utilize and extend.",
                "description_zh": "YouTube 字幕 MCP 服务器是一个用于检索指定 YouTube 视频字幕的工具。它通过提供 `get_transcript` 功能，允许用户输入视频 URL 和可选的语言参数，获取相应的字幕内容。该服务器支持通过 Goose CLI、Goose 桌面版和 Claude 桌面版进行配置和安装，并提供了详细的安装指南。此外，它还支持在受限环境中使用代理服务器访问 YouTube，确保字幕的顺利获取。项目采用 MIT 许可证，代码托管在 GitHub 上，方便用户使用和扩展。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10172?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "--from",
                        "git+https://github.com/jkawamoto/mcp-youtube-transcript",
                        "mcp-youtube-transcript"
                    ]
                },
                "categories": [
                    "内容抓取"
                ],
                "categories_en": [
                    "Content Scraping"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10175",
                "mcpid": "github.com/gongrzhe/office-word-mcp-server",
                "name": "Office-Word-MCP-Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The MCP server designed for creating, reading, and manipulating Microsoft Word documents enables LLMs to process Word documents through standardized interfaces, while offering extensive document editing functionalities.",
                "description_zh": "用于创建、读取和操作微软Word文档MCP服务器，可以让LLMs通过标准化接口处理Word文档，并提供丰富的文档编辑功能。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10175?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "--from",
                        "office-word-mcp-server",
                        "word_mcp_server"
                    ]
                },
                "categories": [
                    "文档工具"
                ],
                "categories_en": [
                    "Document Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10176",
                "mcpid": "github.com/GongRzhe/Gmail-MCP-Server",
                "name": "Gmail AutoAuth MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A server for Gmail integration in Claude Desktop, supporting automatic authentication. This server enables the AI assistant to manage Gmail through natural language interactions.",
                "description_zh": "用于 Claude Desktop 中 Gmail 集成的服务器，支持自动身份验证。此服务器使人工智能助手能够通过自然语言交互管理 Gmail。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10176?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "@gongrzhe/server-gmail-autoauth-mcp"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10184",
                "mcpid": "github.com/tinybirdco/mcp-tinybird",
                "name": "Tinybird MCP server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/08f9809e36ce1511839edfd418e8f956.png",
                "description_en": "An MCP server designed to facilitate interaction between any MCP client and a Tinybird workspace.",
                "description_zh": "一个MCP服务器，用于从任何MCP客户端与Tinybird工作区进行交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10184?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-tinybird",
                        "stdio"
                    ],
                    "env": {
                        "TB_ADMIN_TOKEN": "<TINYBIRD_ADMIN_TOKEN>",
                        "TB_API_URL": "<TINYBIRD_API_URL>"
                    }
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10190",
                "mcpid": "github.com/bitrefill/bitrefill-mcp-server",
                "name": "Bitrefill MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/df7e1799314f19ebf5a251769063bcf4.png",
                "description_en": "This MCP encapsulates the Bitrefill public API, enabling users to search for products and make purchases using a variety of cryptocurrencies such as Bitcoin, Ethereum, Solana, and many others.",
                "description_zh": "这个MCP包装了Bitrefill公共API，允许用户使用比特币、以太坊、Solana等许多加密货币搜索产品和购物。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10190?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "bitrefill-mcp-server"
                    ],
                    "env": {
                        "BITREFILL_API_ID": "your_api_id_here",
                        "BITREFILL_API_SECRET": "your_api_key_here"
                    }
                },
                "categories": [
                    "支付与交易"
                ],
                "categories_en": [
                    "Payment and Transactions"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10214",
                "mcpid": "github.com/JetBrains/mcp-jetbrains",
                "name": "JetBrains MCP Proxy Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/1803c258e085f37d236f5287efad362e.png",
                "description_en": "The JetBrains MCP proxy server is a tool designed to relay client requests to JetBrains IDEs. It facilitates integration with JetBrains IDEs in environments such as VS Code and Claude Desktop by allowing users to install the MCP server plugin and configure the relevant JSON files. The server also supports specific connection configurations in multi-IDE environments and includes logging capabilities. Additionally, the documentation provides detailed installation and troubleshooting steps for various operating systems and environments, including Docker containers, ensuring that users can effectively utilize the proxy server.",
                "description_zh": "该服务器充当代理，承接客户端发往 JetBrains IDE 的请求，在二者间搭建数据传输桥梁，确保请求准确高效传递，助力客户端与 JetBrains IDE 顺畅交互，优化使用体验 。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10214?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@jetbrains/mcp-proxy"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10229",
                "mcpid": "github.com/orliesaurus/pulsemcp-server",
                "name": "PulseMCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The PulseMCP server is a TypeScript-based MCP server that implements a simple note-taking system. It allows users to create, access, and summarize text notes through the Model Context Protocol (MCP), utilizing URI-based resource management and large language model (LLM) summarization prompts.",
                "description_zh": "PulseMCP服务器是一个基于TypeScript的MCP服务器，它实现了一个简单的笔记系统，允许用户通过模型上下文协议（Model Context Protocol），以基于URI的资源管理和大型语言模型（LLM）摘要提示的方式创建、访问和总结文本笔记。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10229?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "pulsemcp-server"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10234",
                "mcpid": "github.com/MarkusPfundstein/mcp-gsuite",
                "name": "mcp-gsuite MCP server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The MCP server is used for interacting with Google products.",
                "description_zh": "MCP服务器用于与Google产品交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10234?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-gsuite",
                        "--accounts-file",
                        "/path/to/custom/.accounts.json",
                        "--credentials-dir",
                        "/path/to/custom/credentials"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10235",
                "mcpid": "github.com/MarkusPfundstein/mcp-obsidian",
                "name": "MCP server for Obsidian",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The MCP server utilizes the Local REST API community plugin to facilitate interaction with Obsidian, establishing a bridge for communication between the two. This enables the seamless flow of data and functionality, providing users with a more convenient and diverse experience.",
                "description_zh": "MCP 服务器借助 Local REST API 社区插件，实现与 Obsidian 的交互，搭建起两者沟通的桥梁，让数据与功能在二者间得以流通，为用户带来更便捷、多元的使用体验。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10235?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-obsidian"
                    ],
                    "env": {
                        "OBSIDIAN_API_KEY": "<YOUR_OBSIDIAN_API_KEY>"
                    }
                },
                "categories": [
                    "文档工具"
                ],
                "categories_en": [
                    "Document Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10238",
                "mcpid": "github.com/awkoy/notion-mcp-server",
                "name": "Notion MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "**Notion MCP Server** is an implementation of an MCP server that enables AI assistants to interact with Notion's API.",
                "description_zh": "**Notion MCP Server** 是一个MCP服务器实现，它使AI助手能够与Notion的API进行交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10238?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "notion-mcp-server"
                    ],
                    "env": {
                        "NOTION_PAGE_ID": "YOUR_PAGE_ID",
                        "NOTION_TOKEN": "YOUR_KEY"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10242",
                "mcpid": "github.com/f4ww4z/mcp-mysql-server",
                "name": "@f4ww4z/mcp-mysql-server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Provide MySQL database operations. Enable AI models to interact with the MySQL database through standardized interfaces.",
                "description_zh": "提供MySQL数据库操作。使AI模型能够通过标准化接口与MySQL数据库进行交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10242?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@f4ww4z/mcp-mysql-server",
                        "mysql://user:password@localhost:port/database"
                    ]
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10246",
                "mcpid": "github.com/formulahendry/mcp-server-code-runner",
                "name": "Code Runner MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An MCP server used for executing code snippets and displaying the results.",
                "description_zh": "用于运行代码片段并显示结果的MCP服务器。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10246?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-server-code-runner@latest"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10249",
                "mcpid": "github.com/mackenly/mcp-fathom-analytics",
                "name": "MCP Fathom Analytics",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An unofficial server that enables AI assistants to access Fathom Analytics data, allowing users to retrieve account information, website statistics, events, aggregated reports, and real-time visitor tracking.",
                "description_zh": "一个非官方服务器，允许AI助手访问Fathom Analytics数据，使用户能够获取账户信息、网站统计数据、事件、聚合报告和实时访客跟踪。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10249?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-fathom-analytics"
                    ],
                    "env": {
                        "FATHOM_API_KEY": "your_api_key_here"
                    }
                },
                "categories": [
                    "内容抓取"
                ],
                "categories_en": [
                    "Content Scraping"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10252",
                "mcpid": "github.com/yuniko-software/minecraft-mcp-server",
                "name": "Minecraft MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/bd71505e3fb4d3197e908cd193366a39.png",
                "description_en": "A Minecraft MCP server powered by the Mineflayer API. It enables real-time control of a Minecraft character, allowing an AI assistant to construct structures, explore the world, and interact with the game environment through natural language commands.",
                "description_zh": "一个由Mineflayer API驱动的Minecraft MCP服务器。它能够实时控制一个Minecraft角色，允许AI助手通过自然语言指令构建结构、探索世界以及与游戏环境进行互动。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10252?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "github:yuniko-software/minecraft-mcp-server",
                        "--host",
                        "localhost",
                        "--port",
                        "25565",
                        "--username",
                        "ClaudeBot"
                    ]
                },
                "categories": [
                    "其他"
                ],
                "categories_en": [
                    "Others"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10260",
                "mcpid": "github.com/wopal-cn/mcp-hotnews-server",
                "name": "HotNews MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/8f6d9c10209f647476db964a4a070c47.png",
                "description_en": "Provide real-time trending topics from major Chinese social platforms and news websites. Support Zhihu Hot List, 36Kr Hot List, Baidu Hot Topics, Bilibili Hot List, Weibo Hot Search, Douyin Hot Topics, and more.",
                "description_zh": "提供来自中国主要社交平台和新闻网站的实时热点话题。支持 知乎热榜、36氪热榜、百度热点、B站热榜、微博热搜、抖音热点等",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10260?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@wopal/mcp-server-hotnews"
                    ]
                },
                "categories": [
                    "社交媒体"
                ],
                "categories_en": [
                    "Social Media"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10262",
                "mcpid": "github.com/mektigboy/server-hyperliquid",
                "name": "Hyperliquid MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An MCP server implementation integrated with the Hyperliquid exchange, providing access to cryptocurrency market data, including mid prices, historical K-lines, and L2 order books.",
                "description_zh": "一个集成到Hyperliquid交易所的MCP服务器实现，提供对加密市场数据的访问，包括中间价、历史K线和L2订单簿。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10262?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@mektigboy/server-hyperliquid"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10282",
                "mcpid": "github.com/ferrislucas/iterm-mcp",
                "name": "iterm-mcp ",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "This MCP server, through its integration with Claude Desktop, enables users to execute shell commands within their current iTerm2 session, achieving seamless command execution via the model context protocol.",
                "description_zh": "此MCP服务器通过与Claude Desktop集成，使用户能够在当前的iTerm2会话中执行shell命令，通过模型上下文协议实现无缝的命令执行。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10282?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "iterm-mcp"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10284",
                "mcpid": "github.com/wrale/mcp-server-make",
                "name": "MCP Server Make",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/cdb5dc5cb60e78e5cb816de9c69fdfd8.png",
                "description_en": "A model context protocol server that enables large language models to securely execute targets within Makefiles, allowing AI assistants to run tests, format code, and automate various development tasks through natural language interactions.",
                "description_zh": "一个模型上下文协议服务器，使大型语言模型能够安全地执行Makefile中的目标，允许人工智能助手通过自然语言交互运行测试、格式化代码和自动化各种开发任务。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10284?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-server-make",
                        "--make-path",
                        "/absolute/path/to/Makefile",
                        "--working-dir",
                        "/absolute/path/to/working/dir"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10287",
                "mcpid": "github.com/T1nker-1220/memories-with-lessons-mcp-server",
                "name": "Knowledge Graph Memory Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Enhance user interaction through a persistent memory system that retains information across chats and learns from past mistakes by leveraging a local knowledge graph and curriculum management.",
                "description_zh": "通过持久记忆系统增强用户互动，该系统可以记住跨聊天的信息，并通过利用本地知识图谱和课程管理来从过去的错误中学习。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10287?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-memory"
                    ]
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10306",
                "mcpid": "github.com/suekou/mcp-notion-server",
                "name": "Notion MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The Notion MCP Server is a middleware specifically designed for the Notion API, aiming to enable efficient interaction between large language models (LLMs) and Notion workspaces. The server optimizes communication with LLMs through Markdown conversion technology, reducing the context size, thereby enhancing interaction efficiency and lowering token consumption. Users can integrate Notion into the Claude desktop version through simple configuration steps and utilize various tools to perform operations such as retrieval, updating, creation, and deletion of pages, databases, and blocks. Additionally, the server supports experimental Markdown conversion features, further optimizing token usage when viewing content. The server is designed with a modular architecture, making it easy to maintain and extend, and is suitable for developers and teams that require deep integration with Notion.",
                "description_zh": "MCP 服务器适配 Notion API，搭建起 Claude 与 Notion 工作区间的交互桥梁。借助它，Claude 可轻松与 Notion 工作区实现数据互通、功能联动，提升协同办公效率。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10306?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@suekou/mcp-notion-server"
                    ],
                    "env": {
                        "NOTION_API_TOKEN": "your-integration-token"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10314",
                "mcpid": "github.com/Nazruden/clickup-mcp-server",
                "name": "ClickUp MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "This server integrates the AI assistant with the ClickUp workspace, enabling task, team, list, and board management through a secure OAuth2 authentication process.",
                "description_zh": "该服务器将AI助手与ClickUp工作区集成，通过安全的OAuth2身份验证过程实现任务、团队、列表和看板管理。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10314?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "@mcp/clickup-server"
                    ],
                    "env": {
                        "CLICKUP_CLIENT_ID": "your_client_id",
                        "CLICKUP_CLIENT_SECRET": "your_client_secret",
                        "CLICKUP_REDIRECT_URI": "http://localhost:3000/oauth/callback"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10323",
                "mcpid": "github.com/delorenj/mcp-server-trello",
                "name": "MCP Server Trello",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Facilitate interaction with Trello boards through the Trello API, offering features such as rate limiting, type safety, input validation, and error handling to enable seamless management of card, list, and board activities.",
                "description_zh": "通过 Trello API 促进与 Trello 看板的交互，提供诸如速率限制、类型安全、输入验证和错误处理等功能，以实现卡片、列表和看板活动的无缝管理。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10323?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-trello"
                    ],
                    "env": {
                        "TRELLO_API_KEY": "your-api-key",
                        "TRELLO_BOARD_ID": "your-board-id",
                        "TRELLO_TOKEN": "your-token"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10327",
                "mcpid": "github.com/yoavniran/cloudinary-mcp-server",
                "name": "Cloudinary MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A model context protocol server that exposes Cloudinary's upload and management API methods as tools for an AI assistant.\nThis integration enables AI systems to trigger and interact with your Cloudinary cloud.",
                "description_zh": "一个模型上下文协议服务器，将Cloudinary上传和管理API方法作为AI助手的工具进行暴露。\n这种集成允许AI系统触发并 interacts 与您的Cloudinary云交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10327?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "cloudinary-mcp-server"
                    ],
                    "env": {
                        "CLOUDINARY_API_KEY": "<api-key>",
                        "CLOUDINARY_API_SECRET": "<api-secret>",
                        "CLOUDINARY_CLOUD_NAME": "<cloud name>"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10337",
                "mcpid": "github.com/EyevinnOSC/mcp-server",
                "name": "Eyevinn Open Source Cloud MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/296f7871fc40d800ca6585fabd7cd185.png",
                "description_en": "The Eyevinn open-source cloud API's MCP server supports the creation of solutions based on open web services. Leveraging open-source web services, creators can receive a share of the revenue generated by the platform.",
                "description_zh": "Eyevinn开源云API的MCP服务器，支持基于开放网络服务的解决方案创建。基于开源的网络服务，创作者可获得平台产生收入的一部分分成。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10337?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@osaas/mcp-server"
                    ],
                    "env": {
                        "OSC_ACCESS_TOKEN": "<YOUR_TOKEN>"
                    }
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10341",
                "mcpid": "github.com/openbnb-org/mcp-server-airbnb",
                "name": "Airbnb MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/e7f9dc1a6afb5a6fb6cde94aac97c645.png",
                "description_en": "Search for Airbnb listings and obtain detailed information about specific properties. Plan your next trip effortlessly with structured data, without the need for an API key, while adhering to Airbnb's guidelines.",
                "description_zh": "搜索Airbnb房源并获取有关特定房产的详细信息。通过结构化数据轻松规划您的下一次旅行，无需API密钥，同时遵守Airbnb的准则。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10341?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@openbnb/mcp-server-airbnb"
                    ]
                },
                "categories": [
                    "内容抓取"
                ],
                "categories_en": [
                    "Content Scraping"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10346",
                "mcpid": "github.com/kazuph/mcp-pocket",
                "name": "MCP Pocket",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "⚠️ Model Context Protocol (MCP) Server, used to retrieve saved articles from the Pocket API and load them into Claude.",
                "description_zh": "ð 模型上下文协议（MCP）服务器，用于从Pocket API检索保存的文章并将其加载到克劳德（Claude）中。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10346?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@kazuph/mcp-pocket"
                    ],
                    "env": {
                        "POCKET_ACCESS_TOKEN": "your-pocket-access-token",
                        "POCKET_CONSUMER_KEY": "your-pocket-consumer-key"
                    }
                },
                "categories": [
                    "内容抓取"
                ],
                "categories_en": [
                    "Content Scraping"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10376",
                "mcpid": "github.com/datastax/astra-db-mcp",
                "name": "Astra DB MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/2055bcde7743787dd77d170fe2a9dc27.png",
                "description_en": "A model context protocol server that enables large language models to interact with the Astra DB database, providing tools for managing collections and records through natural language commands.",
                "description_zh": "一个模型上下文协议服务器，允许大型语言模型与Astra DB数据库交互，通过自然语言命令提供管理集合和记录的工具。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10376?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@datastax/astra-db-mcp"
                    ],
                    "env": {
                        "ASTRA_DB_API_ENDPOINT": "your_astra_db_endpoint",
                        "ASTRA_DB_APPLICATION_TOKEN": "your_astra_db_token"
                    }
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10384",
                "mcpid": "github.com/AgentWong/optimized-memory-mcp-server",
                "name": "optimized-memory-mcp-server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The persistent memory feature implemented using a local knowledge graph allows Claude to retain relevant user information across multiple conversations.",
                "description_zh": "使用本地知识图谱实现的持久记忆功能，可以让克劳德在多次对话中记住用户的相关信息。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10384?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-memory"
                    ]
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10386",
                "mcpid": "github.com/Gitmaxd/dubco-mcp-server-npm",
                "name": "Unofficial dubco-mcp-server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A model context protocol server that enables AI assistants to create, update, and delete Dub.co short links via the Dub.co API.",
                "description_zh": "一种模型上下文协议服务器，允许AI助手通过Dub.co API创建、更新和删除Dub.co短链接。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10386?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "dubco-mcp-server"
                    ],
                    "env": {
                        "DUBCO_API_KEY": "your_api_key_here"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10387",
                "mcpid": "github.com/AshikNesin/pushover-mcp",
                "name": "Pushover MCP",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An implementation of a model context protocol that enables AI agents to send notifications via Pushover.net, with support for customizing messages using various parameters such as priority, sound, and URL.",
                "description_zh": "一种模型上下文协议的实现，使人工智能代理能够通过Pushover.net发送通知，并支持使用优先级、声音和URL等不同参数自定义消息。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10387?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "pushover-mcp@latest",
                        "start",
                        "--token",
                        "YOUR_TOKEN",
                        "--user",
                        "YOUR_USER"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10391",
                "mcpid": "github.com/Krekun/vrchat-mcp-osc",
                "name": "VRChat MCP OSC",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "It serves as a bridge between artificial intelligence assistants and VRChat, enabling AI-driven avatar control and interaction in virtual reality environments through the model context protocol.",
                "description_zh": "为人工智能助手和VRChat之间提供了一个桥梁，通过模型上下文协议实现虚拟现实环境中的人工智能驱动的头像控制和互动。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10391?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "vrchat-mcp-osc"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10400",
                "mcpid": "github.com/kujenga/zotero-mcp",
                "name": "Model Context Protocol server for Zotero",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The server enables users to interact with their Zotero libraries through the Model Context Protocol, offering tools for searching items, retrieving metadata, and accessing full-text articles using natural language queries.",
                "description_zh": "该服务器允许用户通过模型上下文协议与他们的Zotero图书馆进行交互，提供用于搜索项目、检索元数据和使用自然语言查询访问全文的工具。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10400?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "zotero-mcp"
                    ],
                    "env": {
                        "ZOTERO_LOCAL": "true"
                    }
                },
                "categories": [
                    "文档工具"
                ],
                "categories_en": [
                    "Document Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10417",
                "mcpid": "github.com/da-okazaki/mcp-neo4j-server",
                "name": "MCP Neo4j Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The server has enabled interaction between the Neo4j database and Claude Desktop, allowing users to execute Cypher queries, create nodes, and establish relationships within the database.",
                "description_zh": "该服务器启用了Neo4j数据库和Claude Desktop之间的交互，允许用户执行Cypher查询、创建节点以及在数据库中建立关系。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10417?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "@alanse/mcp-neo4j-server"
                    ],
                    "env": {
                        "NEO4J_PASSWORD": "your-password",
                        "NEO4J_URI": "bolt://localhost:7687",
                        "NEO4J_USERNAME": "neo4j"
                    }
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10418",
                "mcpid": "github.com/ChristophEnglisch/keycloak-model-context-protocol",
                "name": "Keycloak MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A model context protocol server that provides tools for managing Keycloak users and realms, allowing you to create and delete users, list available realms, and view users within specific realms.",
                "description_zh": "一种模型上下文协议服务器，提供管理Keycloak用户和领域的工具，允许你创建和删除用户、列出可用领域、以及查看特定领域中的用户。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10418?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "keycloak-model-context-protocol"
                    ],
                    "env": {
                        "KEYCLOAK_ADMIN": "admin",
                        "KEYCLOAK_ADMIN_PASSWORD": "admin",
                        "KEYCLOAK_URL": "http://localhost:8080"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10421",
                "mcpid": "github.com/bhouston/mcp-server-text-editor",
                "name": "Claude Text Editor MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Open-source implementation of the built-in text editor tool for Claude: text_editor_20241022 (Claude 3.5 version) text_editor_20250124 (Claude 3.7 version)",
                "description_zh": "开源的 Claude 内置文本编辑器工具版本实现：text_editor_20241022（Claude 3.5 版本）text_editor_20250124（Claude 3.7 版本）",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10421?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-server-text-editor"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10432",
                "mcpid": "github.com/r-huijts/rijksmuseum-mcp",
                "name": "Rijksmuseum MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "It allows you to search for artworks, retrieve detailed information about specific pieces, access image tiles of the artworks, and explore user-created collections from the National Museum.",
                "description_zh": "允许您搜索艺术品、检索特定艺术品的详细信息、访问艺术品的图像瓦片，并探索来自国立博物馆的用户创建的收藏。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10432?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-server-rijksmuseum"
                    ],
                    "env": {
                        "RIJKSMUSEUM_API_KEY": "your_api_key_here"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10433",
                "mcpid": "github.com/r-huijts/ns-mcp-server",
                "name": "NS Travel Information MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "MCP Server Providing Travel Information for Dutch Railways (NS).",
                "description_zh": "提供荷兰铁路（NS）旅行信息的MCP服务器。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10433?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "ns-mcp-server"
                    ],
                    "env": {
                        "NS_API_KEY": "your_api_key_here"
                    }
                },
                "categories": [
                    "位置服务"
                ],
                "categories_en": [
                    "Location Services"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10434",
                "mcpid": "github.com/r-huijts/xcode-mcp-server",
                "name": "Xcode MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Integrate Claude AI with Xcode to enable secure, AI-powered code assistance, project management, and automated development tasks on local machines.",
                "description_zh": "将 Claude AI 与 Xcode 相连接，实现在本地机器上安全地使用由 AI 驱动的代码辅助、项目管理和自动化的开发任务。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10434?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "xcode-mcp-server"
                    ],
                    "env": {
                        "PROJECTS_BASE_DIR": "/path/to/your/xcode/projects"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10441",
                "mcpid": "github.com/ahonn/mcp-server-gsc",
                "name": "Google Search Console MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A server that provides access to Google Search Console data through a model context protocol, enabling users to retrieve and analyze search analytics data with custom dimensions and reporting periods.",
                "description_zh": "一个通过模型上下文协议提供访问Google Search Console数据的服务器，允许用户检索和分析具有自定义维度和报告周期的搜索分析数据。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10441?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-server-gsc"
                    ],
                    "env": {
                        "GOOGLE_APPLICATION_CREDENTIALS": "/path/to/credentials.json"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10442",
                "mcpid": "github.com/leafeye/lunchmoney-mcp-server",
                "name": "Lunchmoney MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An MCP server that enables AI assistants to interact with your Lunchmoney data, facilitating natural language queries about transactions, budgets, and spending patterns.",
                "description_zh": "一种MCP服务器，它允许人工智能助手与您的Lunchmoney数据进行交互，从而实现关于交易、预算和支出模式的自然语言查询。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10442?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "lunchmoney-mcp-server"
                    ],
                    "env": {
                        "LUNCHMONEY_TOKEN": "your_token_here"
                    }
                },
                "categories": [
                    "支付与交易"
                ],
                "categories_en": [
                    "Payment and Transactions"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10451",
                "mcpid": "github.com/shaneholloman/mcp-knowledge-graph",
                "name": "`mcp-knowledge-graph`",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An enhanced persistent memory implementation approach utilizing a local knowledge graph with a customizable --memory-path. This enables Claude to retain user information across multiple chat sessions.",
                "description_zh": "一种改进的持久内存实现方法，使用带有可定制 --memory-path 的本地知识图谱。这使得 Claude 能够在多次聊天中记住用户的信息。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10451?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-knowledge-graph",
                        "--memory-path",
                        "/Users/shaneholloman/Dropbox/shane/db/memory.jsonl"
                    ]
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10452",
                "mcpid": "github.com/bigcodegen/mcp-neovim-server",
                "name": "Neovim MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Leverage Vim's native text editing commands and workflows (which Claude has already comprehended) to create a lightweight code assistance layer.",
                "description_zh": "利用Vim原生的文本编辑命令和工作流（Claude已经理解这些），来创建一个轻量级的代码辅助层。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10452?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-neovim-server"
                    ],
                    "env": {
                        "ALLOW_SHELL_COMMANDS": "true",
                        "NVIM_SOCKET_PATH": "/tmp/nvim"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10470",
                "mcpid": "github.com/rashidazarang/airtable-mcp",
                "name": "Airtable MCP",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Directly connect AI tools to Airtable, enabling users to query, create, update, and delete records using natural language.",
                "description_zh": "将AI工具直接连接到Airtable，允许用户使用自然语言查询、创建、更新和删除记录。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10470?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "@smithery/cli",
                        "run",
                        "@rashidazarang/airtable-mcp",
                        "--token",
                        "YOUR_AIRTABLE_TOKEN",
                        "--base",
                        "YOUR_BASE_ID"
                    ]
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10473",
                "mcpid": "github.com/manascb1344/together-mcp-server",
                "name": "Image Generation MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A model context protocol server that leverages the Flux.1 Schnell model through Together AI to achieve high-quality image generation, with customizable parameters.",
                "description_zh": "一个模型上下文协议服务器，通过Together AI使用Flux.1 Schnell模型实现高质量图像生成，并且参数可定制。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10473?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "together-mcp@latest -y"
                    ],
                    "env": {
                        "TOGETHER_API_KEY": "<API KEY>"
                    }
                },
                "categories": [
                    "设计与创意"
                ],
                "categories_en": [
                    "Design and Creativity"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10482",
                "mcpid": "github.com/dcSpark/mcp-server-helius",
                "name": "MCP Helius",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/22ba4fbfc9c31cd9fdc91cca3eaa5077.png",
                "description_en": "A model context protocol server that provides Claude with comprehensive access to Solana blockchain data through the Helius API, enabling operations such as checking wallet balances, retrieving blockchain information, and interacting with tokens and NFTs.",
                "description_zh": "一种模型上下文协议服务器，通过 Helius API 为 Claude 提供对 Solana 区块链数据的全面访问，从而实现检查钱包余额、检索区块链信息以及与代币和 NFT 交互等操作。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10482?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@mcp-dockmaster/mcp-server-helius"
                    ],
                    "env": {
                        "HELIUS_API_KEY": "your-helius-api-key"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10487",
                "mcpid": "github.com/abhiz123/todoist-mcp-server",
                "name": "Todoist MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An MCP server that integrates Claude with Todoist, enabling task management using natural language, including creating, updating, completing, and deleting tasks.",
                "description_zh": "一个集成了Claude与Todoist的MCP服务器，支持使用自然语言进行任务管理，包括创建、更新、完成和删除任务。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10487?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@abhiz123/todoist-mcp-server"
                    ],
                    "env": {
                        "TODOIST_API_TOKEN": "your_api_token_here"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10493",
                "mcpid": "github.com/devabdultech/hn-mcp",
                "name": "Hacker News MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "We have integrated a robust Hacker News feature into the LLM client, enabling users to access stories, comments, user profiles, and search functionalities through the model's contextual protocol.",
                "description_zh": "为LLM客户端添加了强大的Hacker News集成，允许用户通过模型上下文协议访问故事、评论、用户资料和搜索功能。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10493?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@devabdultech/hn-mcp-server"
                    ]
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10506",
                "mcpid": "github.com/spences10/mcp-svelte-docs",
                "name": "mcp-svelte-docs",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Enable vector similarity search and Svelte documentation provision through the MCP protocol, with support for local caching and multiple llms.txt document formats.",
                "description_zh": "通过MCP协议启用矢量相似性搜索和Svelte文档的提供，并支持本地缓存和多种llms.txt文档格式。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10506?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-svelte-docs"
                    ],
                    "env": {
                        "LIBSQL_AUTH_TOKEN": "your-auth-token-if-using-remote-db",
                        "LIBSQL_URL": "file:local.db"
                    }
                },
                "categories": [
                    "文档工具"
                ],
                "categories_en": [
                    "Document Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10511",
                "mcpid": "github.com/orbit-logistics/notion-mcp-server",
                "name": "@orbit-logistics/notion-mcp-server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/53662bcadc0ef9e8d832242e20129515.png",
                "description_en": "By exposing the Notion API as a tool for LLM, it enables interaction with Notion, allowing seamless execution of operations such as reading, creating, updating, and deleting Notion pages through natural language.",
                "description_zh": "通过将 Notion API 作为 LLM 的工具公开，启用与 Notion 的交互，允许通过自然语言无缝执行读取、创建、更新和删除 Notion 页面等操作。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10511?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-sequential-thinking-test",
                        "-t",
                        "<notion_integration_token>"
                    ]
                },
                "categories": [
                    "文档工具"
                ],
                "categories_en": [
                    "Document Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10534",
                "mcpid": "github.com/ivo-toby/mcp-openapi-server",
                "name": "OpenAPI MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A server that enables large language models to discover and interact with REST APIs defined by OpenAPI specifications through model context protocols.",
                "description_zh": "一台使大型语言模型能够通过模型上下文协议发现并与由 OpenAPI 规范定义的 REST API 交互的服务器。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10534?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@ivotoby/openapi-mcp-server"
                    ],
                    "env": {
                        "API_BASE_URL": "https://api.example.com",
                        "API_HEADERS": "Authorization:Bearer token123,X-API-Key:your-api-key",
                        "OPENAPI_SPEC_PATH": "https://api.example.com/openapi.json"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10540",
                "mcpid": "github.com/ahmad2x4/mcp-server-seq",
                "name": "Seq MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The Seq MCP server enables interaction with the Seq API endpoints for logging and monitoring, providing tools for managing signals, events, and alerts, and offers extensive filtering and configuration options.",
                "description_zh": "Seq MCP服务器启用了与Seq API端点的交互，用于日志记录和监控，提供了管理信号、事件和警报的工具，并具有广泛的过滤和配置选项。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10540?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-seq"
                    ],
                    "env": {
                        "SEQ_API_KEY": "your-api-key",
                        "SEQ_BASE_URL": "your-seq-url"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10545",
                "mcpid": "github.com/dvcrn/mcp-server-siri-shortcuts",
                "name": "Siri Shortcuts MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The model context protocol enables interaction with macOS Siri Shortcuts, allowing users to dynamically list, open, and execute shortcuts with optional inputs.",
                "description_zh": "通过模型上下文协议启用与macOS Siri快捷方式的交互，允许用户动态列出、打开和运行带有可选输入的快捷方式。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10545?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "mcp-server-siri-shortcuts"
                    ],
                    "env": {
                        "GENERATE_SHORTCUT_TOOLS": "true",
                        "INJECT_SHORTCUT_LIST": "false"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10554",
                "mcpid": "github.com/ZubeidHendricks/youtube-mcp-server",
                "name": "YouTube MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "This server enables artificial intelligence language models to interact with YouTube content through standardized interfaces, offering functionalities such as video and channel information retrieval, subtitle management, and playlist operations.",
                "description_zh": "该服务器允许人工智能语言模型通过标准化接口与YouTube内容进行交互，提供视频和频道信息检索、字幕管理和播放列表操作等功能。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10554?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-youtube"
                    ],
                    "env": {
                        "YOUTUBE_API_KEY": "<YOUR_API_KEY>"
                    }
                },
                "categories": [
                    "内容抓取"
                ],
                "categories_en": [
                    "Content Scraping"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10568",
                "mcpid": "github.com/mcollina/mcp-ripgrep",
                "name": "MCP Ripgrep Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Provide ripgrep search functionality for MCP clients (such as Claude), enabling high-performance text searches across files within the system.",
                "description_zh": "为MCP客户端（如克劳德）提供ripgrep搜索功能，允许在系统中的文件上进行高性能的文本搜索。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10568?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-ripgrep@latest"
                    ]
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10587",
                "mcpid": "github.com/runekaagaard/mcp-alchemy",
                "name": "MCP Alchemy",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The Claude desktop version is directly connected to the database through an API layer, enabling it to explore database structures, write SQL queries, analyze datasets, and create reports. This API layer also includes tools for table exploration and query execution.",
                "description_zh": "通过API层将克劳德桌面版直接连接到数据库，使其能够探索数据库结构、编写SQL查询、分析数据集和创建报告。该API层还包含用于表探索和查询执行的工具。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10587?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "--from",
                        "mcp-alchemy==2025.04.09.091234",
                        "mcp-alchemy"
                    ],
                    "env": {
                        "DB_URL": "sqlite:///path/to/database.db"
                    }
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10595",
                "mcpid": "github.com/winor30/mcp-server-datadog",
                "name": "Datadog MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The MCP server provides an interface for integrating with the Datadog API, enabling seamless management of events, monitoring, logs, dashboards, metrics, traces, and hosts. Its extensible design allows for easy integration of additional Datadog APIs in the future to expand functionality.",
                "description_zh": "MCP服务器提供了一个对接Datadog API的接口，能够实现对事件、监控、日志、仪表板、指标、跟踪和主机的无缝管理。其可扩展的设计使得未来可以轻松集成更多的Datadog API以进行功能扩展。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10595?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-github"
                    ],
                    "env": {
                        "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10597",
                "mcpid": "github.com/QuantGeekDev/fiscal-data-mcp",
                "name": "Overview",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Connecting to the U.S. Department of the Treasury's financial data API enables users to retrieve specific Treasury reports, access historical data, and generate formatted reports.",
                "description_zh": "连接到美国财政部的财政数据API，使用户能够获取特定的财政部报表、访问历史数据并生成格式化的报告。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10597?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "fiscal-data-mcp"
                    ]
                },
                "categories": [
                    "内容抓取"
                ],
                "categories_en": [
                    "Content Scraping"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10598",
                "mcpid": "github.com/QuantGeekDev/mongo-mcp",
                "name": "🗄️ MongoDB MCP Server for LLMS",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A Model Context Protocol (MCP) server that enables large language models (LLMs) to interact directly with MongoDB databases. It seamlessly integrates natural language queries for collections, schema inspection, and data management.",
                "description_zh": "一种模型上下文协议（MCP）服务器，使大型语言模型（LLM）能够直接与MongoDB数据库交互。通过自然语言查询集合、检查模式和管理数据无缝衔接。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10598?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "mongo-mcp",
                        "mongodb://<username>:<password>@<host>:<port>/<database>?authSource=admin"
                    ]
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10599",
                "mcpid": "github.com/QuantGeekDev/coincap-mcp",
                "name": "Coincap MCP",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Coincap MCP is a server designed for querying cryptocurrency information, enabling users to access data through Coincap's public API without the need for an API key or registration. It supports a variety of features, such as querying Bitcoin prices, retrieving the price of any cryptocurrency, and listing all available cryptocurrency assets. The server can be automatically installed via Smithery, supports Node.js 18+ and npx, and is compatible with both MacOS and Windows systems. Developers can build and run the server locally, with support for automatic rebuilding. The project is licensed under the MIT License, making it suitable for applications that require quick access to cryptocurrency data.",
                "description_zh": "Coincap MCP 是一个用于查询加密货币信息的服务器，允许用户通过 Coincap 的公共 API 获取数据，而无需 API 密钥或注册。它支持多种功能，如查询比特币价格、获取任何加密货币的价格以及列出所有可用的加密货币资产。该服务器可通过 Smithery 自动安装，支持 Node.js 18+ 和 npx，适用于 MacOS 和 Windows 系统。开发人员可以在本地构建和运行服务器，支持自动重建功能。项目采用 MIT 许可证，适用于需要快速获取加密货币数据的应用场景。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10599?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "coincap-mcp"
                    ]
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10635",
                "mcpid": "github.com/tumf/mcp-text-editor",
                "name": "MCP Text Editor Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A line-oriented text file editor. Optimized for LLM tools, it minimizes token usage through efficient partial file access.",
                "description_zh": "一种面向行的文本文件编辑器。针对LLM工具进行了优化，通过高效的部分文件访问来最小化令牌使用。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10635?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-text-editor"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10647",
                "mcpid": "github.com/Geeksfino/kb-mcp-server",
                "name": "Embedding MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A portable, localized, and user-friendly MCP server designed to facilitate semantic/graph retrieval for the \"all-in-one\" embedded database of txtai. It is capable of loading any txtai embedded database that is available in tar.gz format.",
                "description_zh": "一个便携式、本地化、简单便捷的MCP服务器，用于支持txtai“一体化”嵌入式数据库的语义/图谱检索。任何以tar.gz形式存在的txtai嵌入式数据库都可以被加载。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10647?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "kb-mcp-server@0.2.6",
                        "--embeddings",
                        "/path/to/knowledge_base",
                        "--host",
                        "localhost",
                        "--port",
                        "8000"
                    ]
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10664",
                "mcpid": "github.com/neka-nat/freecad-mcp",
                "name": "FreeCAD MCP",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "This repository is a FreeCAD MCP, which allows you to control FreeCAD through Claude Desktop.",
                "description_zh": "这个仓库是一个FreeCAD MCP，它允许你通过Claude Desktop来控制FreeCAD。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10664?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "freecad-mcp"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10671",
                "mcpid": "github.com/rawveg/ollama-mcp",
                "name": "Ollama MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Achieves seamless integration between Ollama's local LLM model and applications supporting the MCP protocol, enabling model management and chat interactions.",
                "description_zh": "实现了Ollama的本地LLM模型与支持MCP协议的应用程序之间的无缝集成，支持模型管理和聊天互动。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10671?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@rawveg/ollama-mcp"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10681",
                "mcpid": "github.com/nickclyde/duckduckgo-mcp-server",
                "name": "DuckDuckGo Search MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A Model Context Protocol (MCP) server that provides web search functionality through DuckDuckGo, with additional capabilities for content retrieval and parsing.",
                "description_zh": "一种模型上下文协议（MCP）服务器，通过DuckDuckGo提供网页搜索功能，并具有内容获取和解析的附加功能。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10681?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "duckduckgo-mcp-server"
                    ]
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10702",
                "mcpid": "github.com/horizondatawave/hdw-mcp-server",
                "name": "HDW MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/9ef0394780b762af0e896ea80fc2442c.png",
                "description_en": "A Model Context Protocol Server that provides comprehensive access to LinkedIn data and functionalities, enabling data retrieval and user account management through the HorizonDataWave API.",
                "description_zh": "一种模型上下文协议服务器，提供对LinkedIn数据和功能的全面访问，通过HorizonDataWave API实现数据检索和用户账户管理。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10702?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "@horizondatawave/mcp"
                    ],
                    "env": {
                        "HDW_ACCESS_TOKEN": "YOUR_HD_W_ACCESS_TOKEN",
                        "HDW_ACCOUNT_ID": "YOUR_HD_W_ACCOUNT_ID"
                    }
                },
                "categories": [
                    "社交媒体"
                ],
                "categories_en": [
                    "Social Media"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10714",
                "mcpid": "github.com/bitscorp-mcp/mcp-ffmpeg",
                "name": "MCP FFmpeg Video Processor",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/e4765a6ceecab5102ddbaeaeec00e9c0.png",
                "description_en": "A Node.js server enabled for video operations through natural language requests, including adjusting video to different resolutions (360p to 1080p) and extracting audio in various formats (MP3, AAC, WAV, OGG).",
                "description_zh": "一个启用通过自然语言请求进行视频操作的 Node.js 服务器，包括将视频调整为不同分辨率（360p 到 1080p）以及以各种格式（MP3、AAC、WAV、OGG）提取音频。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10714?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "--yes",
                        "/absolute/path/to/mcp-ffmpeg"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10734",
                "mcpid": "github.com/sergehuber/inoyu-mcp-unomi-server",
                "name": "Inoyu Apache Unomi MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A model context protocol server, managed through Apache Unomi configuration files, enables Claude to maintain user context.",
                "description_zh": "一种模型上下文协议服务器，通过 Apache Unomi 配置文件管理，使 Claude 能够保持用户上下文。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10734?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "@inoyu/mcp-unomi-server"
                    ],
                    "env": {
                        "UNOMI_BASE_URL": "http://your-unomi-server:8181",
                        "UNOMI_EMAIL": "your-email@example.com",
                        "UNOMI_KEY": "your-unomi-key",
                        "UNOMI_PASSWORD": "your-password",
                        "UNOMI_PROFILE_ID": "your-profile-id",
                        "UNOMI_SOURCE_ID": "claude-desktop",
                        "UNOMI_USERNAME": "your-username"
                    }
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10743",
                "mcpid": "github.com/s2005/mcp-everything",
                "name": "MCP Everything",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A test server that implements all functionalities of the MCP protocol, including prompts, tools, resources, and sampling, designed to test MCP clients rather than for practical applications.",
                "description_zh": "一个实现MCP协议所有功能的测试服务器，包括提示、工具、资源和采样，旨在测试MCP客户端而非实际应用。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10743?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-everything"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10751",
                "mcpid": "github.com/mcpdotdirect/evm-mcp-server",
                "name": "EVM MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/6bbe92b90ee8bd52e56bd40b3e02cdf7.png",
                "description_en": "A Model Context Protocol Server that enables AI agents to interact with over 30 Ethereum-compatible blockchain networks, providing services such as token transfers, contract interactions, and ENS resolution through a unified interface.",
                "description_zh": "一种模型上下文协议服务器，使人工智能代理能够与30多个以太坊兼容的区块链网络交互，通过统一接口提供代币转账、合约交互和ENS解析等服务。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10751?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@mcpdotdirect/evm-mcp-server",
                        "--http"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10752",
                "mcpid": "github.com/g0t4/mcp-server-commands",
                "name": "Tools",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An MCP server for executing commands.",
                "description_zh": "一个用于运行命令的MCP服务器。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10752?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "mcp-server-commands"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10754",
                "mcpid": "github.com/GongRzhe/Quickchart-MCP-Server",
                "name": "quickchart-server MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An MCP server designed for generating customizable data visualizations, utilizing QuickChart.io, supporting a variety of chart types and Chart.js configurations.",
                "description_zh": "一个用于生成可自定义数据可视化的MCP服务器，使用QuickChart.io，支持多种图表类型和Chart.js配置。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10754?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@gongrzhe/quickchart-mcp-server"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10755",
                "mcpid": "github.com/GongRzhe/REDIS-MCP-Server",
                "name": "Redis MCP Server (@gongrzhe/server-redis-mcp@1.0.0)",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The Redis MCP Server (@gongrzhe/server-redis-mcp@1.0.0) is a server implementation designed for interacting with Redis databases, based on the Redis Model Context Protocol (MCP). It enables large language models (LLMs) to interact with Redis key-value stores through a set of standardized tools, supporting common Redis operations such as setting, getting, deleting, and listing key-value pairs. The server can be installed via Smithery or manually, and it supports integration with the Claude Desktop application. Additionally, it offers Docker support for easy deployment across various environments. Developers can build from source code or use Docker to create images. The project is licensed under the ISC license.",
                "description_zh": "提供对Redis数据库的访问。此服务器通过一组标准化工具，使大型语言模型（LLM）能够与Redis键值存储进行交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10755?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "@gongrzhe/server-redis-mcp@1.0.0",
                        "redis://localhost:6379"
                    ]
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10756",
                "mcpid": "github.com/GongRzhe/Calendar-Autoauth-MCP-Server",
                "name": "Calendar AutoAuth MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A server designed for the integration of the Cluade desktop client with Google Calendar, supporting automatic authentication. This server enables the AI assistant to manage Google Calendar events through natural language interactions.",
                "description_zh": "用于Cluade桌面端与Google日历集成的服务器，支持自动身份验证。此服务器使人工智能助手能够通过自然语言交互来管理Google日历事件。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10756?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "@gongrzhe/server-calendar-autoauth-mcp"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10759",
                "mcpid": "github.com/GongRzhe/TRAVEL-PLANNER-MCP-Server",
                "name": "Travel Planner MCP Server (@gongrzhe/server-travelplanner-mcp)",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "By interacting with Google Maps and travel planning services, large language models are enabled to perform travel-related tasks, including location searches, location details, and travel time calculations.",
                "description_zh": "通过与Google Maps和旅行规划服务交互，使大型语言模型能够执行与旅行相关的任务，包括地点搜索、地点详情和旅行时间计算。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10759?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "@gongrzhe/server-travelplanner-mcp"
                    ],
                    "env": {
                        "GOOGLE_MAPS_API_KEY": "your_google_maps_api_key"
                    }
                },
                "categories": [
                    "位置服务"
                ],
                "categories_en": [
                    "Location Services"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10769",
                "mcpid": "github.com/kiliczsh/mcp-mongo-server",
                "name": "MCP MongoDB Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A server that provides a model-context protocol for accessing MongoDB databases. This server enables large language models to inspect collection schemas and execute read-only queries.",
                "description_zh": "一种提供对MongoDB数据库访问的模型上下文协议服务器。此服务器允许大型语言模型检查集合模式并执行只读查询。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10769?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-mongo-server",
                        "mongodb://muhammed:kilic@mongodb.localhost/sample_namespace"
                    ]
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10779",
                "mcpid": "github.com/tadasant/mcp-server-ssh-rails-runner",
                "name": "MCP Server: SSH Rails Runner",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Enable secure remote execution of Rails console commands via SSH in the deployed Rails environment, suitable for read-only operations, change planning, and execution of approved modifications.",
                "description_zh": "启用通过 SSH 在部署的 Rails 环境中进行安全的远程执行 Rails 控制台命令，适用于只读操作、变更规划以及执行已批准的更改。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10779?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "mcp-server-ssh-rails-runner"
                    ],
                    "env": {
                        "RAILS_WORKING_DIR": "/path/to/rails/app/root",
                        "SSH_HOST": "your.remote.host",
                        "SSH_PRIVATE_KEY_PATH": "your_SSH_PRIVATE_KEY_PATH",
                        "SSH_USER": "your_ssh_user"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10791",
                "mcpid": "github.com/JoshuaRileyDev/simulator-mcp-server",
                "name": "iOS Simulator MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The iOS Simulator MCP Server is a tool based on the Model Context Protocol (MCP), designed to enable programmatic control of iOS simulators through standardized interfaces. Its primary functions include listing available iOS simulators, starting and stopping simulators, installing .app packages on simulators, and launching installed applications via bundle IDs. With simple configuration, developers can easily integrate this server into their Claude setup, facilitating automated testing and development workflows.",
                "description_zh": "用于控制iOS模拟器的MCP服务器。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10791?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "y",
                        "@joshuarileydev/simulator-mcp-server"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10796",
                "mcpid": "github.com/zueai/vercel-api-mcp",
                "name": "vercel-mcp",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/3e51c714c59f3f3ebf0f8e91704e6ae4.png",
                "description_en": "# Translation\nAn MCP server that provides tools for interacting with the Vercel API, capable of managing deployments, DNS records, domains, projects, and environment variables through natural language.",
                "description_zh": "# 翻译\n一个MCP服务器，提供与Vercel API交互的工具，能够通过自然语言管理部署、DNS记录、域名、项目和环境变量。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10796?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "vercel-mcp VERCEL_API_KEY=<YOUR_API_KEY>"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10801",
                "mcpid": "github.com/thrashr888/terraform-mcp-server",
                "name": "Terraform Registry MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "By connecting AI models to the Terraform registry through MCP, it enables provider lookup, resource usage examples, and module recommendations, thereby streamlining the Terraform workflow.",
                "description_zh": "通过 MCP 将 AI 模型连接到 Terraform 注册表，启用提供程序查找、资源使用示例和模块推荐，从而简化 Terraform 工作流。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10801?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "terraform-mcp-server"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10818",
                "mcpid": "github.com/awwaiid/mcp-server-taskwarrior",
                "name": "TaskWarrior MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The TaskWarrior MCP Server is a Node.js-based implementation designed to manage TaskWarrior tasks via the Model Context Protocol (MCP). It offers a range of functionalities, including viewing pending tasks, filtering tasks by project and tags, adding new tasks (with support for descriptions, due dates, priorities, projects, and tags), and marking tasks as completed. The server operates through the local `task` command-line tool, thus requiring TaskWarrior to be pre-installed and configured. It supports integration with Claude Desktop and provides a straightforward API for fetching, adding, and completing tasks. Installation is straightforward, achievable simply via npm, making it an ideal solution for users seeking efficient task management.",
                "description_zh": "TaskWarrior MCP 服务器是一个基于 Node.js 的实现，用于通过 Model Context Protocol (MCP) 管理 TaskWarrior 任务。它提供了一系列功能，包括查看待处理任务、按项目和标签筛选任务、添加新任务（支持描述、截止日期、优先级、项目和标签）以及标记任务为已完成。该服务器通过本地 `task` 命令行工具运行，因此需要预先安装和配置 TaskWarrior。它支持与 Claude Desktop 集成，并提供了简单的 API 来获取任务、添加任务和完成任务。安装方便，只需通过 npm 安装即可，适合需要高效管理任务的用户。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10818?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-server-taskwarrior"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10820",
                "mcpid": "github.com/Tritlo/lsp-mcp",
                "name": "LSP MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "By interfacing with the Language Server Protocol, the Large Language Model is enabled to access LSP features such as hover information, completions, diagnostics, and code actions, thereby enhancing code suggestions.",
                "description_zh": "通过语言服务器协议接口连接大型语言模型，使LLM能够访问LSP的悬停信息、补全、诊断和代码操作，从而改进代码建议。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10820?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "tritlo/lsp-mcp",
                        "<语言ID>",
                        "<LSP路径>",
                        "<LSP参数>"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10828",
                "mcpid": "github.com/dragon1086/kospi-kosdaq-stock-server",
                "name": "kospi-kosdaq-stock-server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The kospi-kosdaq-stock-server is a server based on FastMCP, specifically designed to provide stock data for the Korean KOSPI and KOSDAQ markets. Its primary functions include querying stock codes and names, retrieving OHLCV data (Open, High, Low, Close, Volume) for specific stocks, market capitalization data, fundamental data (such as P/E ratio, P/B ratio, dividend yield), and trading volume data categorized by investor type. The server supports installation and configuration via command-line tools and can be integrated with Claude Desktop, facilitating users in querying and analyzing Korean stock market data.",
                "description_zh": "kospi-kosdaq-stock-server 是一个基于 FastMCP 的服务器，专门用于提供韩国 KOSPI 和 KOSDAQ 市场的股票数据。其主要功能包括查询股票代码和名称、获取特定股票的 OHLCV 数据（开盘价、最高价、最低价、收盘价、成交量）、市场资本化数据、基本面数据（如市盈率、市净率、股息收益率）以及按投资者类型分类的交易量数据。该服务器支持通过命令行工具进行安装和配置，并可与 Claude Desktop 集成，方便用户查询和分析韩国股票市场数据。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10828?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "kospi_kosdaq_stock_server"
                    ]
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10836",
                "mcpid": "github.com/marcopesani/mcp-server-serper",
                "name": "Serper Search and Scrape MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The Serper MCP server supports both search and web scraping functionalities, and is compatible with all the latest parameters introduced by the Serper API, such as location parameters.",
                "description_zh": "该 Serper MCP 服务器支持搜索和网页抓取，并且兼容 Serper API 引入的所有最新参数，例如位置参数。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10836?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "serper-search-scrape-mcp-server"
                    ],
                    "env": {
                        "SERPER_API_KEY": "your_api_key_here"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10844",
                "mcpid": "github.com/tejpalvirk/developer",
                "name": "Developer MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A robust context management system, capable of maintaining persistent context across coding sessions, assists development teams in tracking project structure, dependencies, and progress.",
                "description_zh": "一个强大的上下文管理系统，能够在编码会话之间保持持久的上下文，帮助开发团队跟踪项目结构、依赖关系和进度。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10844?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "github:tejpalvirk/developer"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10856",
                "mcpid": "github.com/truss44/mcp-crypto-price",
                "name": "Crypto Price & Market Analysis MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The Cryptocurrency Price and Market Analysis MCP Server is a tool based on the CoinCap API, designed to provide users with comprehensive cryptocurrency analysis. Through an easy-to-use interface, the server offers real-time price data, market analysis, and historical trends. Users can start the server by configuring the Claude Desktop file and optionally add a CoinCap API key to obtain higher rate limits. The server supports a variety of functions, including fetching the current price of cryptocurrencies, 24-hour statistics, detailed market analysis, and historical price data analysis. This project is inspired by Alex Andru's coincap-mcp project and is released under the MIT License.",
                "description_zh": "加密货币价格与市场分析 MCP 服务器是一个基于 CoinCap API 的工具，旨在为用户提供全面的加密货币分析。该服务器通过易于使用的界面，提供实时价格数据、市场分析和历史趋势。用户可以通过配置 Claude Desktop 文件来启动该服务器，并可选地添加 CoinCap API 密钥以获得更高的速率限制。服务器支持多种功能，包括获取加密货币的当前价格、24 小时统计数据、详细的市场分析以及历史价格数据分析。该项目受到 Alex Andru 的 coincap-mcp 项目启发，并根据 MIT 许可证发布。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10856?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-crypto-price"
                    ],
                    "env": {
                        "COINCAP_API_KEY": "YOUR_API_KEY_HERE"
                    }
                },
                "categories": [
                    "支付与交易"
                ],
                "categories_en": [
                    "Payment and Transactions"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10860",
                "mcpid": "github.com/genm/mcp-server-discord-webhook",
                "name": "MCP Server Discord Webhook",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An MCP server that enables publishing messages to Discord webhooks, allowing customization of content, username, and avatar URL.",
                "description_zh": "一个MCP服务器，它 enables 发布消息到Discord网络钩子，允许自定义内容、用户名和头像URL。  \n\n（注：原句中的“enables”在此处的翻译根据上下文保留了英文，如果需要完全中文表达，可以改为“一个MCP服务器，它可以实现将消息发布到Discord网络钩子，并允许自定义内容、用户名和头像URL。”）",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10860?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@genpm/mcp-server-discord-webhook"
                    ],
                    "env": {
                        "DISCORD_WEBHOOK_URL": "your-discord-webhook-url"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10863",
                "mcpid": "github.com/YuChenSSR/mindmap-mcp-server",
                "name": "Mindmap MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A Model Context Protocol Server capable of converting Markdown content into interactive mind maps, enabling AI assistants to visualize hierarchical information through HTML content or saved files.",
                "description_zh": "一种模型上下文协议服务器，可以将Markdown内容转换为交互式思维导图，使人工智能助手能够通过HTML内容或保存的文件来可视化分层信息。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10863?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mindmap-mcp-server",
                        "--return-type",
                        "html"
                    ]
                },
                "categories": [
                    "文档工具"
                ],
                "categories_en": [
                    "Document Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10869",
                "mcpid": "github.com/PhialsBasement/mcp-github-server-plus",
                "name": "GitHub MCP Server Plus",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The MCP server for the GitHub API offers file operations, repository management, and advanced search capabilities, featuring automatic branch creation and comprehensive error handling.",
                "description_zh": "GitHub API 的 MCP 服务器，提供文件操作、仓库管理和高级搜索功能，具有自动分支创建和全面的错误处理功能。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10869?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@modelcontextprotocol/server-github"
                    ],
                    "env": {
                        "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10883",
                "mcpid": "github.com/sanderkooger/mcp-server-ragdocs",
                "name": "MCP-server-ragdocs",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An MCP server implementation that provides tools for retrieving and processing documents through vector search, enabling AI assistants to enhance their responses with relevant document context. It generates embedded content using Ollama or OpenAI and includes Docker files.",
                "description_zh": "一种MCP服务器实现，它提供了通过向量搜索检索和处理文档的工具，使AI助手能够用相关的文档上下文来增强其响应，使用Ollama或OpenAI生成嵌入式内容，包含Docker文件。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10883?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@sanderkooger/mcp-server-ragdocs"
                    ],
                    "env": {
                        "EMBEDDINGS_PROVIDER": "openai",
                        "OPENAI_API_KEY": "your-openai-key-here",
                        "QDRANT_API_KEY": "your-qdrant-key",
                        "QDRANT_URL": "your-qdrant-url"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10885",
                "mcpid": "github.com/mamertofabian/elevenlabs-mcp-server",
                "name": "ElevenLabs MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The ElevenLabs MCP server is a Model Context Protocol (MCP) server integrated with the ElevenLabs text-to-speech API, primarily designed for managing and executing voice generation tasks. Its core functionalities include generating audio from text via the ElevenLabs API, supporting multiple voices and script segments, utilizing an SQLite database for history storage, and providing an example web client based on SvelteKit. This client supports simple text-to-speech conversion, multi-part script management, voice history tracking and playback, and audio file downloads. Users can install it through Smithery or uvx tools and configure relevant environment variables to utilize the ElevenLabs API. Additionally, developers can clone the repository and install dependencies for local development. The project is licensed under the MIT License.",
                "description_zh": "ElevenLabs MCP 服务器是一个与 ElevenLabs 文本转语音 API 集成的 Model Context Protocol (MCP) 服务器，主要用于管理和执行语音生成任务。其核心功能包括通过 ElevenLabs API 从文本生成音频、支持多种声音和脚本部分、使用 SQLite 数据库进行历史记录存储，以及提供一个基于 SvelteKit 的示例 Web 客户端。该客户端支持简单的文本转语音转换、多部分脚本管理、语音历史记录跟踪和播放、以及音频文件下载。用户可以通过 Smithery 或 uvx 工具进行安装，并配置相关环境变量以使用 ElevenLabs API。此外，开发者可以通过克隆仓库并安装依赖项进行本地开发。该项目遵循 MIT 许可证。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10885?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "elevenlabs-mcp-server"
                    ],
                    "env": {
                        "ELEVENLABS_API_KEY": "your-api-key",
                        "ELEVENLABS_MODEL_ID": "eleven_flash_v2",
                        "ELEVENLABS_OUTPUT_DIR": "output",
                        "ELEVENLABS_SIMILARITY_BOOST": "0.75",
                        "ELEVENLABS_STABILITY": "0.5",
                        "ELEVENLABS_STYLE": "0.1",
                        "ELEVENLABS_VOICE_ID": "your-voice-id"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10890",
                "mcpid": "github.com/mario-andreschak/mcp-image-recognition",
                "name": "MCP Image Recognition Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Utilizing the Anthropic Claude Vision and OpenAI GPT-4 Vision APIs to deliver image recognition capabilities, supporting a variety of image formats, and offering optional text extraction through Tesseract OCR.",
                "description_zh": "使用Anthropic Claude Vision和OpenAI GPT-4 Vision API提供图像识别功能，支持多种图像格式，并通过Tesseract OCR提供可选的文本提取。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10890?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-image-recognition"
                    ],
                    "env": {
                        "OPENAI_API_KEY": "your-api-key",
                        "OPENAI_MODEL": "gpt-4o",
                        "VISION_PROVIDER": "openai"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10936",
                "mcpid": "github.com/mahawi1992/mcp-documentation-server",
                "name": "MCP Documentation Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An intelligent document server that offers AI-assisted code refinement and document management through integration with Claude Desktop.",
                "description_zh": "一个智能文档服务器，通过 Claude Desktop 集成提供人工智能辅助的代码改进和文档管理。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10936?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-documentation-server"
                    ],
                    "env": {
                        "BRAVE_API_KEY": "<YOUR_BRAVE_API_KEY>"
                    }
                },
                "categories": [
                    "文档工具"
                ],
                "categories_en": [
                    "Document Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10958",
                "mcpid": "github.com/haltakov/meme-mcp",
                "name": "Meme MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A simple model context protocol server that enables AI models to utilize the ImgFlip API for generating meme images, allowing users to create memes through text prompts.",
                "description_zh": "一个简单的模型上下文协议服务器，允许人工智能模型使用ImgFlip API生成表情图像，使用户能够通过文本提示创建表情。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10958?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "meme-mcp"
                    ],
                    "env": {
                        "IMGFLIP_PASSWORD": "<IMGFLIP PASSWORD>",
                        "IMGFLIP_USERNAME": "<IMGFLIP USERNAME>"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10978",
                "mcpid": "github.com/olostep/olostep-mcp-server",
                "name": "Olostep MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Search and scrape content from Google search and independent websites. Fast and cost-effective. ⚡️",
                "description_zh": "在谷歌搜索、独立网站上查找并抓取其内容。快速且成本效益高。⚡️",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10978?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "olostep-mcp"
                    ],
                    "env": {
                        "OLOSTEP_API_KEY": "YOUR_API_KEY_HERE"
                    }
                },
                "categories": [
                    "内容抓取"
                ],
                "categories_en": [
                    "Content Scraping"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10981",
                "mcpid": "github.com/chatmcp/mcp-server-router",
                "name": "mcprouter MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/f740680d0162334b59e8d42c0a64549e.png",
                "description_en": "A proxy service that connects MCP clients to a remote MCP server, enabling users to access remote resources using the server's MCP.so key without the need to run their own server.",
                "description_zh": "一种代理服务，它将MCP客户端连接到远程MCP服务器，允许用户使用MCP.so的服务器密钥访问远程资源，而无需运行自己的服务器。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10981?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcprouter"
                    ],
                    "env": {
                        "SERVER_KEY": "xxx"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10982",
                "mcpid": "github.com/ramidecodes/mcp-server-notion",
                "name": "Notion MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A Model Context Protocol (MCP) server that exposes the official Notion SDK, enabling AI models to interact with Notion workspaces.",
                "description_zh": "一个模型上下文协议（MCP）服务器，它公开了官方的Notion SDK，允许人工智能模型与Notion工作区进行交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10982?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "@ramidecodes/mcp-server-notion@latest",
                        "-y",
                        "--api-key=your-notion-integration-key"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp10988",
                "mcpid": "github.com/blurrah/mcp-graphql",
                "name": "mcp-graphql",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "MCP for working with GraphQL servers.",
                "description_zh": "用于与GraphQL服务器一起工作的MCP。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/10988?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "mcp-graphql",
                        "--endpoint",
                        "http://localhost:3000/graphql"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11002",
                "mcpid": "github.com/exoticknight/mcp-file-merger",
                "name": "File Merger MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Through a straightforward MCP interface, the feature of merging multiple files into a single file is enabled. It offers a secure method for file consolidation while restricting access to only permitted directories.",
                "description_zh": "通过简单的MCP界面，启用将多个文件合并到一个文件的功能。提供了一种安全的合并文件的方式，同时限制对仅允许的目录的访问。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11002?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@exoticknight/mcp-file-merger",
                        "/path/to/allowed/dir"
                    ]
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11004",
                "mcpid": "github.com/chulanpro5/evm-mcp-server",
                "name": "EVM MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A comprehensive server that enables AI agents to interact with multiple EVM-compatible blockchain networks through a unified interface, supporting ENS resolution, token operations, and smart contract interactions.",
                "description_zh": "一个全面的服务器， enables 人工智能代理通过统一接口与多个EVM兼容的区块链网络进行交互，支持ENS解析、代币操作和智能合约交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11004?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@mcpdotdirect/evm-mcp-server",
                        "--http"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11007",
                "mcpid": "github.com/Fewsats/agora-mcp",
                "name": "Agora MCP",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/af62b538b706a5d8f02f519ba731fdf7.png",
                "description_en": "An MCP server that connects AI assistants to SearchAgora, enabling users to search, discover, and purchase products on the web through natural language conversations.",
                "description_zh": "一种MCP服务器，它将人工智能助手连接到SearchAgora，使用户能够通过自然语言对话在网页上搜索、发现和购买产品。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11007?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "agora-mcp"
                    ]
                },
                "categories": [
                    "支付与交易"
                ],
                "categories_en": [
                    "Payment and Transactions"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11011",
                "mcpid": "github.com/takumi0706/google-calendar-mcp",
                "name": "Google Calendar MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A server protocol for model context integration with Google Calendar and Claude's desktop client, enabling users to manage calendar events (view, create, update, delete) through natural language.",
                "description_zh": "一种集成了Google日历与Claude桌面端的模型上下文协议服务器，允许用户通过自然语言管理日历事件（查看、创建、更新、删除）。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11011?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@takumi0706/google-calendar-mcp"
                    ],
                    "env": {
                        "GOOGLE_CLIENT_ID": "your_client_id",
                        "GOOGLE_CLIENT_SECRET": "your_client_secret",
                        "GOOGLE_REDIRECT_URI": "http://localhost:4153/oauth2callback"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11018",
                "mcpid": "github.com/9Ninety/MCPNotes",
                "name": "📝 MCP Notes",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A simple notepad MCP server designed for recording and managing notes using AI models.",
                "description_zh": "一个简单的记事本MCP服务器，用于使用AI模型记录和管理笔记。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11018?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "-p",
                        "mcp-notes",
                        "mcp-notes-server",
                        "--dynamodb",
                        "dynamodb://access_key:secret_key@region/table"
                    ]
                },
                "categories": [
                    "文档工具"
                ],
                "categories_en": [
                    "Document Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11022",
                "mcpid": "github.com/shanggqm/hefeng-mcp-weather",
                "name": "HeFeng Weather MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The Weather Forecast Data Across China is Provided Based on the HeFeng Weather API.",
                "description_zh": "基于和风天气API提供中国各地的天气预报数据。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11022?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "hefeng-mcp-weather@latest",
                        "--apiKey=${API_KEY}"
                    ]
                },
                "categories": [
                    "位置服务"
                ],
                "categories_en": [
                    "Location Services"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11023",
                "mcpid": "github.com/utensils/mcp-nixos",
                "name": "MCP-NixOS - Because Your AI Assistant Shouldn't Hallucinate About Packages",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/ca4fa80ea6aa898777110fdd28a10854.png",
                "description_en": "MCP-NixOS is a model context protocol server that delivers real-time, accurate information on NixOS packages, options, Home Manager, and nix-darwin configurations. It prevents AI assistants from generating erroneous imaginations about NixOS resources and enables them to provide factual guidance on system configuration.",
                "description_zh": "MCP-NixOS 是一个模型上下文协议服务器，它提供关于 NixOS 软件包、选项、Home Manager 和 nix-darwin 配置的实时、准确信息，防止 AI 助手对 NixOS 资源产生错误想象，并使它们能够提供基于事实的系统配置指导。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11023?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-nixos"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11024",
                "mcpid": "github.com/stabgan/openrouter-mcp-multimodal",
                "name": "OpenRouter MCP Multimodal Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Through OpenRouter.ai's diverse model ecosystem, it offers chat and image analysis capabilities, supporting text conversations as well as powerful multimodal image processing using various AI models.",
                "description_zh": "通过OpenRouter.ai多样化的模型生态系统提供聊天和图像分析功能，支持文本对话以及使用各种AI模型进行强大的多模态图像处理。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11024?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@stabgan/openrouter-mcp-multimodal"
                    ],
                    "env": {
                        "DEFAULT_MODEL": "qwen/qwen2.5-vl-32b-instruct:free",
                        "OPENROUTER_API_KEY": "your-api-key-here"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11029",
                "mcpid": "github.com/Laity624/my-mcp-server",
                "name": "Remote MCP Server on Cloudflare",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A model context protocol server running on Cloudflare Workers, supporting OAuth login, enabling AI assistants like Claude to remotely execute tools via HTTP connections.",
                "description_zh": "一个在Cloudflare Workers上运行的模型上下文协议服务器，支持OAuth登录，允许像Claude这样的AI助手通过HTTP连接远程执行工具。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11029?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "mcp-remote",
                        "http://localhost:8787/sse"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11059",
                "mcpid": "github.com/qinyuanpei/mcp-server-weibo",
                "name": "Weibo MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A model context protocol server designed for retrieving Weibo user information, activities, and search functionalities. It facilitates the acquisition of detailed user profiles, timeline content, and enables the execution of user searches on Weibo.",
                "description_zh": "一种用于抓取微博用户信息、动态和搜索功能的模型上下文协议服务器。它有助于获取详细的用户资料、时间线内容，并在微博上执行用户搜索。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11059?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "--from",
                        "git+https://github.com/qinyuanpei/mcp-server-weibo.git",
                        "mcp-server-weibo"
                    ]
                },
                "categories": [
                    "社交媒体"
                ],
                "categories_en": [
                    "Social Media"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11065",
                "mcpid": "github.com/recursechat/mcp-server-apple-shortcuts",
                "name": "Apple Shortcuts MCP Server 🤖",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/016b535fb767bd03fe9db76c0caae562.png",
                "description_en": "MCP Server Integrated with Apple Shortcuts",
                "description_zh": "与Apple Shortcuts集成的MCP服务器",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11065?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-server-apple-shortcuts"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11068",
                "mcpid": "github.com/ktanaka101/mcp-server-duckdb",
                "name": "mcp-server-duckdb",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An implementation of a Model Context Protocol (MCP) server tailored for DuckDB, which facilitates database interaction through MCP tools. It would be intriguing to have large language models (LLMs) analyze it. DuckDB is well-suited for local analysis.",
                "description_zh": "一种适用于DuckDB的模型上下文协议（MCP）服务器实现，通过MCP工具提供数据库交互功能。让大型语言模型（LLM）对其进行分析将是一件有趣的事情。DuckDB适合用于本地分析。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11068?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-server-duckdb",
                        "--db-path",
                        "~/mcp-server-duckdb/data/data.db"
                    ]
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11084",
                "mcpid": "github.com/misterboe/strapi-mcp-server",
                "name": "Strapi MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A Model Context Protocol Server that enables AI assistants to interact with Strapi CMS instances through standardized interfaces, supporting content types and REST API operations.",
                "description_zh": "一种模型上下文协议服务器，允许AI助手通过标准化接口与Strapi CMS实例进行交互，支持内容类型和REST API操作。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11084?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@bschauer/strapi-mcp-server@2.4.0"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11092",
                "mcpid": "github.com/fatwang2/search1api-mcp",
                "name": "Search1API MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A Model Context Protocol (MCP) server that utilizes the Search1API to provide search and crawling functionalities.",
                "description_zh": "一个使用Search1API提供搜索和爬取功能的模型上下文协议（MCP）服务器。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11092?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "search1api-mcp"
                    ],
                    "env": {
                        "SEARCH1API_KEY": "YOUR_SEARCH1API_KEY"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11106",
                "mcpid": "github.com/open-strategy-partners/osp_marketing_tools",
                "name": "Open Strategy Partners (OSP) Marketing Tools for LLMs",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/08c8a2d39acc1f4d55786f9260b6c37e.png",
                "description_en": "Enable seamless integration with any MCP-supported LLM client to create and optimize technical content and product positioning using Open Strategy Partners' methodology.",
                "description_zh": "启用与任何支持MCP的LLM客户端的无缝集成，以使用Open Strategy Partners的方法论创建和优化技术内容及产品定位。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11106?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "--from",
                        "git+https://github.com/open-strategy-partners/osp_marketing_tools@main",
                        "osp_marketing_tools"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11122",
                "mcpid": "github.com/wazzan/mcp-coincap-jj",
                "name": "Crypto Price & Market Analysis MCP Server (JJ Fork)",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A Model Context Protocol (MCP) server that utilizes the CoinCap API to deliver comprehensive cryptocurrency analytics. This server offers real-time price data, market analysis, and historical trends through a user-friendly interface. It has been updated to use CoinCap API v3.",
                "description_zh": "一个使用CoinCap API提供全面加密货币分析的模型上下文协议（MCP）服务器。该服务器通过易于使用的界面提供实时价格数据、市场分析和历史趋势。已更新为使用CoinCap API v3。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11122?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@bujaayjaay/mcp-coincap-jj"
                    ],
                    "env": {
                        "COINCAP_API_KEY": "INPUT_YOUR_API_KEY_HERE"
                    }
                },
                "categories": [
                    "支付与交易"
                ],
                "categories_en": [
                    "Payment and Transactions"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11135",
                "mcpid": "github.com/leehanchung/bing-search-mcp",
                "name": "Bing Search MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A model context protocol server integrated with Microsoft Bing Search API, enabling AI assistants to conduct web, news, and image searches.",
                "description_zh": "一个集成了微软必应搜索API的模型上下文协议服务器，允许人工智能助手进行网络、新闻和图片搜索。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11135?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "/path/to/your/bing-search-mcp"
                    ],
                    "env": {
                        "BING_API_KEY": "your-bing-api-key"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11154",
                "mcpid": "github.com/tomekkorbak/oura-mcp-server",
                "name": "Oura MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Enable the functionality to query sleep, readiness, and resilience data from the Oura API through the Model Context Protocol (MCP), allowing for natural language interaction and seamless integration with tools like Claude.",
                "description_zh": "通过模型上下文协议（MCP）启用从 Oura API 查询睡眠、就绪性和恢复力数据的功能，允许自然语言交互，并与 Claude 等工具无缝集成。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11154?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "oura-mcp-server"
                    ],
                    "env": {
                        "OURA_API_TOKEN": "YOUR_OURA_API_TOKEN"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11155",
                "mcpid": "github.com/JustaName-id/ens-mcp-server",
                "name": "ENS MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/adf3f83af08b987b73abf121f3506cf1.png",
                "description_en": "Enable Claude to interact with the Ethereum Name Service (ENS) system, allowing for the parsing of names, checking availability, retrieving records, and performing other ENS-related operations through natural language processing.",
                "description_zh": "启用 Claude 与以太坊名称服务（ENS）系统交互，通过自然语言解析名称、检查可用性、检索记录以及执行其他与 ENS 相关的操作。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11155?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-server-ens"
                    ],
                    "env": {
                        "PROVIDER_URL": "https://your-provider-url.com,https://your-backup-provider.com"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11158",
                "mcpid": "github.com/johnneerdael/netskope-mcp",
                "name": "Netskope NPA MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The model context protocol provides tools for managing Netskope infrastructure, policies, and bootstrap configurations.",
                "description_zh": "通过模型上下文协议提供用于管理Netskope基础设施、策略和引导配置的工具。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11158?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@johnneerdael/netskope-mcp"
                    ],
                    "env": {
                        "NETSKOPE_API_KEY": "your-token",
                        "NETSKOPE_BASE_URL": "https://your-tenant.goskope.com"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11171",
                "mcpid": "github.com/StevenStavrakis/obsidian-mcp",
                "name": "Obsidian MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Enable the AI Assistant to interact with the Obsidian vault, providing tools for reading, creating, editing, and managing notes and tags.",
                "description_zh": "启用AI助手与Obsidian保险库互动，提供阅读、创建、编辑和管理笔记和标签的工具。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11171?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "obsidian-mcp",
                        "/path/to/your/vault",
                        "/path/to/your/vault2"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11174",
                "mcpid": "github.com/felores/placid-mcp-server",
                "name": "Placid.app MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A server designed for integration with Placid.app's API, enabling template listing and creative generation through the Model Context Protocol, and featuring secure API token management capabilities.",
                "description_zh": "一个用于与Placid.app的API集成的服务器，通过模型上下文协议启用模板列表显示和创意生成，并具有安全的API令牌管理功能。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11174?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "@felores/placid-mcp-server"
                    ],
                    "env": {
                        "PLACID_API_TOKEN": "your-api-token"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11185",
                "mcpid": "github.com/xxxbrian/mcp-rquest",
                "name": "mcp-rquest",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A model context protocol server that enables Claude and other large language models to execute HTTP requests with authentic browser fingerprints, bypassing common anti-bot measures and interacting with websites in a more natural manner.",
                "description_zh": "一种模型上下文协议服务器，使克劳德和其他大型语言模型能够进行具有真实浏览器指纹的HTTP请求，绕过常见的反机器人措施，更自然地与网站交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11185?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-rquest"
                    ]
                },
                "categories": [
                    "浏览器自动化"
                ],
                "categories_en": [
                    "Browser Automation"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11187",
                "mcpid": "github.com/icraft2170/youtube-data-mcp-server",
                "name": "YouTube MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The YouTube MCP server is a Model Context Protocol server based on the YouTube Data API, designed to provide a standardized interface for AI language models to interact with YouTube content. Its primary functions include retrieving video details, searching for videos, fetching multilingual subtitles, analyzing channel statistics, and viewing trending video trends. The server offers various tools such as `getVideoDetails`, `searchVideos`, and `getTranscripts`, facilitating in-depth analysis of video and channel data. Installation can be done automatically via Smithery or manually, requiring the configuration of a YouTube API key. The server is compatible with Node.js environments and is released under the MIT license.",
                "description_zh": "YouTube MCP 服务器是一个基于 YouTube 数据 API 的模型上下文协议服务器，旨在为 AI 语言模型提供标准化的接口以与 YouTube 内容进行交互。其主要功能包括获取视频详细信息、搜索视频、检索多语言字幕、分析频道统计数据、查看热门视频趋势等。服务器提供了多种工具，如 `getVideoDetails`、`searchVideos`、`getTranscripts` 等，方便用户进行视频和频道数据的深入分析。安装方式支持通过 Smithery 自动安装或手动安装，并需要配置 YouTube API 密钥。该服务器适用于 Node.js 环境，并遵循 MIT 许可证发布。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11187?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "youtube-data-mcp-server"
                    ],
                    "env": {
                        "YOUTUBE_API_KEY": "YOUR_API_KEY_HERE",
                        "YOUTUBE_TRANSCRIPT_LANG": "ko"
                    }
                },
                "categories": [
                    "内容抓取"
                ],
                "categories_en": [
                    "Content Scraping"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11191",
                "mcpid": "github.com/piddlingtuna/tfnsw-realtime-alerts-mcp-server",
                "name": "TfNSW Realtime Alerts MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "This server enables large language models to access and interact in real-time with traffic alerts from the New South Wales Transport Authority network, supports filtering by traffic mode, and returns formatted alert information regarding disruptions and planned works.",
                "description_zh": "该服务器使大型语言模型能够访问并实时与新南威尔士州交通局网络的交通警报进行交互，支持按交通方式过滤，并返回关于中断和计划工程的格式化警报信息。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11191?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "tfnsw-realtime-alerts-mcp-server"
                    ],
                    "env": {
                        "NSW_TRANSPORT_API_KEY": "your_api_key_here"
                    }
                },
                "categories": [
                    "位置服务"
                ],
                "categories_en": [
                    "Location Services"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11195",
                "mcpid": "github.com/tacticlaunch/mcp-linear",
                "name": "MCP Linear",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/61e8a79b3c7b5271f7182d228bf759d3.png",
                "description_en": "MCP Linear is a Model Context Protocol (MCP) server implemented for the Linear GraphQL API, designed to enable AI assistants to seamlessly interact with the Linear project management system. Through the MCP protocol, MCP Linear allows users to retrieve data such as issues, projects, and teams from Linear, and supports creating and updating issues, changing issue statuses, assigning tasks, adding comments, as well as creating projects and teams. Users can interact with the Linear system through simple command-line prompts, such as displaying all issues, creating new issues, or updating issue statuses. MCP Linear supports installation via Smithery and also offers manual configuration and running options, making it suitable for various development environments and client tools. The project is based on the MIT license, allowing developers to freely use and modify it.",
                "description_zh": "启用AI助手通过自然语言与Linear项目管理系统交互的MCP服务器，允许用户检索、创建和更新问题、项目和团队。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11195?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@tacticlaunch/mcp-linear"
                    ],
                    "env": {
                        "LINEAR_API_TOKEN": "<YOUR_TOKEN>"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11203",
                "mcpid": "github.com/kshern/image-tools-mcp",
                "name": "Image Tools MCP",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Image Tools MCP is a Model Context Protocol service designed for retrieving image dimensions and compressing images. It supports both URL and local file sources, offering features such as image dimension retrieval, compression using the TinyPNG API, and format conversion (e.g., webp, jpeg, png). The service provides detailed information including width, height, type, MIME type, and compression data. Integration with MCP clients is straightforward, allowing users to connect and utilize the service for various image processing tasks. The project leverages libraries like probe-image-size, tinify, and figma-api, and requires environment variables like TINIFY_API_KEY and FIGMA_API_TOKEN for full functionality. Licensed under MIT.",
                "description_zh": "图像工具MCP是一种模型上下文协议（MCP）服务，它通过TinyPNG API从URL和本地文件中检索图像尺寸并压缩图像。它支持将图像转换为webp、jpeg/jpg和png等格式，并提供关于宽度、高度、类型和压缩的详细信息。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11203?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "image-tools-mcp"
                    ],
                    "env": {
                        "FIGMA_API_TOKEN": "<YOUR_FIGMA_API_TOKEN>",
                        "TINIFY_API_KEY": "<YOUR_TINIFY_API_KEY>"
                    }
                },
                "categories": [
                    "设计与创意"
                ],
                "categories_en": [
                    "Design and Creativity"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11220",
                "mcpid": "github.com/ZeparHyfar/mcp-datetime",
                "name": "mcp-datetime",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A date and time formatting service implemented as an MCP server for the Claude desktop application. It supports generating date and time strings in various formats.",
                "description_zh": "一个作为 Claude 桌面应用程序的 MCP 服务器实现的日期时间格式化服务。支持生成各种格式的日期时间字符串。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11220?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-datetime"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11226",
                "mcpid": "github.com/SimonB97/win-cli-mcp-server",
                "name": "Windows CLI MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A Model Context Protocol (MCP) server that provides secure command-line access to Windows systems, enabling MCP clients like Claude Desktop to safely execute commands in PowerShell, CMD, and Git Bash shells, with configurable security controls.",
                "description_zh": "一种模型上下文协议（MCP）服务器，提供对Windows系统的安全命令行访问，允许像Claude Desktop这样的MCP客户端在PowerShell、CMD和Git Bash shell中安全地执行命令，并带有可配置的安全控制。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11226?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@simonb97/server-win-cli"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11228",
                "mcpid": "github.com/joshuayoes/ios-simulator-mcp",
                "name": "iOS Simulator MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Enable interaction with the iOS simulator by providing tools to inspect UI elements, control UI interactions, and manage the simulator through natural language commands.",
                "description_zh": "通过提供检查 UI 元素、控制 UI 交互以及通过自然语言命令管理模拟器的工具，启用与 iOS 模拟器的交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11228?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "ios-simulator-mcp"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11232",
                "mcpid": "github.com/niyonabil/blogger-mcp-server",
                "name": "blogger-mcp-server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An intermediary server enables artificial intelligence models to interact with Google's Blogger platform, allowing for the automated creation and management of blogs, posts, and tags through the Blogger API.",
                "description_zh": "一个中间服务器， enables 人工智能模型与谷歌的Blogger平台交互，通过Blogger API自动创建和管理博客、帖子和标签。 \n\n（注：原文中的“enables”在翻译成中文时需根据上下文调整词性或结构以使句子通顺，这里为了保持与原文结构的一致性，暂时保留了类似的表达方式。更流畅的翻译可以是：）\n\n一个中间服务器，使人工智能模型能够与谷歌的Blogger平台交互，通过Blogger API自动创建和管理博客、帖子和标签。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11232?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@mcproadev/blogger-mcp-server"
                    ],
                    "env": {
                        "BLOGGER_API_KEY": "VOTRE_CLE_API_ICI"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11237",
                "mcpid": "github.com/lucitra/clover-mcp",
                "name": "Clover MCP (Model Context Protocol) Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Enable AI agents to access and interact with Clover merchant data, inventory, and orders through secure OAuth authentication with the MCP server.",
                "description_zh": "通过安全的OAuth身份验证MCP服务器，启用AI代理对Clover商户数据、库存和订单的访问和交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11237?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@ibraheem4/clover-mcp"
                    ],
                    "env": {
                        "CLOVER_BASE_URL": "https://apisandbox.dev.clover.com",
                        "CLOVER_CLIENT_ID": "your-clover-client-id",
                        "CLOVER_CLIENT_SECRET": "your-clover-client-secret"
                    }
                },
                "categories": [
                    "支付与交易"
                ],
                "categories_en": [
                    "Payment and Transactions"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11244",
                "mcpid": "github.com/lazy-dinosaur/ccxt-mcp",
                "name": "CCXT MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A server that allows AI models to interact with cryptocurrency exchange APIs through the Model Context protocol, providing access to over 100 exchanges and their trading functionalities.",
                "description_zh": "允许AI模型通过Model Context协议与加密货币交易所API交互的服务器，提供对100多家交易所及其交易功能的访问。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11244?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@lazydino/ccxt-mcp"
                    ]
                },
                "categories": [
                    "支付与交易"
                ],
                "categories_en": [
                    "Payment and Transactions"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11254",
                "mcpid": "github.com/yuna0x0/anilist-mcp",
                "name": "AniList MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The AniList MCP Server is a tool based on the Model Context Protocol (MCP), designed to interact with the AniList API, enabling LLM clients to access and manipulate data related to anime, manga, characters, staff, and users on AniList. Its primary functions include searching and retrieving information on anime, manga, characters, staff, and users, supporting advanced filtering options, and allowing users to perform actions such as favoriting and following. The server can be installed via Smithery or manually, and it supports integration with MCP clients like Claude Desktop. Developers can also deploy it using Docker and utilize the MCP Inspector for debugging and testing purposes.",
                "description_zh": "AniList MCP 服务器是一个基于模型上下文协议（MCP）的工具，旨在与 AniList API 进行交互，使 LLM 客户端能够访问和操作 AniList 上的动漫、漫画、角色、工作人员和用户数据。其主要功能包括搜索和获取动漫、漫画、角色、工作人员及用户信息，支持高级筛选选项，并允许用户执行收藏、关注等操作。该服务器可以通过 Smithery 或手动安装，并支持与 Claude Desktop 等 MCP 客户端集成。开发者还可以通过 Docker 进行部署，并利用 MCP Inspector 进行调试和测试。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11254?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "anilist-mcp"
                    ],
                    "env": {
                        "ANILIST_TOKEN": "your_api_token"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11255",
                "mcpid": "github.com/yuna0x0/hackmd-mcp",
                "name": "HackMD MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The HackMD MCP Server is a Model Context Protocol (MCP) server designed to interact with the HackMD API, aiming to assist AI assistants in managing HackMD notes. It supports a variety of operations, including fetching user information, listing and managing notes for users and teams (create, read, update, delete), and viewing reading history, among others. The server requires a Node.js 18+ environment and is configured with a HackMD API token through environment variables. It can be integrated into MCP clients (such as Claude Desktop) via Smithery, mcp-get, or manual installation, and offers support for local development and Docker. Additionally, the MCP Inspector tool is available for debugging and testing server functionalities. The project is licensed under the MIT License, with an emphasis on the security of the API token.",
                "description_zh": "一个模型上下文协议服务器，使人工智能助手能够与HackMD API交互以管理笔记，包括创建、读取、更新和删除笔记。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11255?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "hackmd-mcp"
                    ],
                    "env": {
                        "HACKMD_API_TOKEN": "your_api_token"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11256",
                "mcpid": "github.com/MladenSU/cli-mcp-server",
                "name": "CLI MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The CLI MCP Server is a secure implementation of the Model Context Protocol (MCP), specifically designed for executing controlled command-line operations. It boasts comprehensive security features, including command whitelisting, path validation, and execution control, ensuring the safety of command-line operations. The server supports asynchronous operations, provides detailed error reporting, and restricts the working directory to prevent path traversal and shell operator injection. Through environment variable configuration, users can flexibly set permitted commands, flags, execution timeouts, and command length limits. This server is ideally suited for providing controlled CLI access to LLM applications while maintaining a high level of security.",
                "description_zh": "具有安全执行和可自定义安全策略的命令行接口",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11256?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "cli-mcp-server"
                    ],
                    "env": {
                        "ALLOWED_COMMANDS": "ls,cat,pwd,echo",
                        "ALLOWED_DIR": "</your/desired/dir>",
                        "ALLOWED_FLAGS": "-l,-a,--help,--version",
                        "COMMAND_TIMEOUT": "30",
                        "MAX_COMMAND_LENGTH": "1024"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11260",
                "mcpid": "github.com/BurtTheCoder/mcp-shodan",
                "name": "Shodan MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The MCP server is used for querying the Shodan API and Shodan CVEDB. This server provides tools for IP lookup, device search, DNS query, vulnerability query, CPE query, and more.",
                "description_zh": "用于查询Shodan API和Shodan CVEDB的MCP服务器。该服务器提供了IP查询、设备搜索、DNS查询、漏洞查询、CPE查询等工具。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11260?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@burtthecoder/mcp-shodan"
                    ],
                    "env": {
                        "SHODAN_API_KEY": "your-shodan-api-key"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11269",
                "mcpid": "github.com/aliargun/mcp-server-gemini",
                "name": "Gemini MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The Model Context Protocol (MCP) server implementation enables Claude Desktop to interact with Google's Gemini AI model.",
                "description_zh": "模型上下文协议（MCP）服务器实现，使克劳德桌面能够与谷歌的双子座AI模型进行交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11269?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "github:aliargun/mcp-server-gemini"
                    ],
                    "env": {
                        "GEMINI_API_KEY": "your_api_key_here"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11273",
                "mcpid": "github.com/HarjjotSinghh/mcp-server-postgres-multi-schema",
                "name": "PostgreSQL Multi-Schema MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A model-context protocol server that provides read-only access to a PostgreSQL database, featuring enhanced multi-schema support, enabling large language models (LLMs) to inspect database schemas across multiple namespaces and execute read-only queries while maintaining schema isolation.",
                "description_zh": "一种模型上下文协议服务器，提供对 PostgreSQL 数据库的只读访问，具有增强的多模式支持，允许大型语言模型（LLM）跨多个命名空间检查数据库模式并执行只读查询，同时保持模式隔离。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11273?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-server-postgres-multi-schema",
                        "postgresql://localhost/mydb",
                        "public,audit"
                    ]
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11275",
                "mcpid": "github.com/nbbaier/mcp-turso",
                "name": "mcp-turso",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "",
                "description_zh": "# 翻译\n一个模型上下文协议服务器，为Claude提供访问Turso托管的LibSQL数据库的功能，支持数据库表列示、模式检索以及执行SELECT查询。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11275?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-turso"
                    ],
                    "env": {
                        "TURSO_AUTH_TOKEN": "your_token",
                        "TURSO_DATABASE_URL": "your_url"
                    }
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11283",
                "mcpid": "github.com/SecretiveShell/MCP-searxng",
                "name": "MCP-searxng",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Used to connect the proxy system to the search system's MCP server via searXNG.",
                "description_zh": "用于通过 searXNG 将代理系统连接到搜索系统的 MCP 服务器。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11283?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-searxng"
                    ]
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11287",
                "mcpid": "github.com/ruchernchong/mcp-server-google-analytics",
                "name": "Google Analytics MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The Google Analytics MCP Server is a tool built on the Model Context Protocol TypeScript SDK, designed for accessing and analyzing Google Analytics 4 (GA4) data. Its primary functions include retrieving customizable dimension page views, tracking changes in active and new users, analyzing specific events and their metrics, monitoring user behavior (such as session duration and bounce rate), and supporting queries with flexible date ranges. The server requires Node.js 20 or higher, a Google Analytics 4 property, a Google Cloud project with the Analytics Data API enabled, and service account credentials with appropriate permissions. Users can install it via Smithery or manually, and configure it for use in Claude Desktop. The server also offers various features, such as fetching page views, active users, events, and user behavior metrics. For security, it is recommended to store sensitive credentials in environment variables and adhere to the principle of least privilege. The project follows the MIT license and welcomes community contributions.",
                "description_zh": "一个用于访问Google Analytics 4（GA4）数据的MCP服务器实现，使用Model Context Protocol TypeScript SDK构建。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11287?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-server-google-analytics"
                    ],
                    "env": {
                        "GA_PROPERTY_ID": "your-ga4-property-id",
                        "GOOGLE_CLIENT_EMAIL": "your-service-account@project.iam.gserviceaccount.com",
                        "GOOGLE_PRIVATE_KEY": "your-private-key"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11292",
                "mcpid": "github.com/nloui/paperless-mcp",
                "name": "Paperless-NGX MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Enable interaction with the Paperless-NGX API server, supporting document management, tagging, and metadata operations through a natural language interface.",
                "description_zh": "启用与Paperless-NGX API服务器的交互，支持通过自然语言接口进行文档管理、标记和元数据操作。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11292?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "paperless-mcp",
                        "http://your-paperless-instance:8000",
                        "your-api-token"
                    ]
                },
                "categories": [
                    "文档工具"
                ],
                "categories_en": [
                    "Document Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11306",
                "mcpid": "github.com/sammcj/mcp-github-issue",
                "name": "MCP GitHub Issue Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Enable Large Language Models (LLMs) to interact with GitHub issues by providing details as tasks, thereby achieving seamless integration and task management through the GitHub platform.",
                "description_zh": "启用大型语言模型（LLM）与GitHub问题进行交互，通过将详情提供为任务，从而实现通过GitHub平台的无缝集成和任务管理。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11306?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "mcp-github-issue"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11314",
                "mcpid": "github.com/delorenj/mcp-server-ticketmaster",
                "name": "MCP Server for Ticketmaster",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A tool provided via the Ticketmaster API to discover events at Madison Square Garden, returning structured data containing event details such as name, date, price, and ticket purchase link.",
                "description_zh": "通过Ticketmaster API提供发现麦迪逊广场花园活动的工具，返回包含活动详情的结构化数据，如名称、日期、价格和购票链接。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11314?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@delorenj/mcp-server-ticketmaster"
                    ],
                    "env": {
                        "TICKETMASTER_API_KEY": "your-api-key-here"
                    }
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11315",
                "mcpid": "github.com/integromat/make-mcp-server",
                "name": "Make MCP Server (legacy)",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/f225a77aabf57ddff1af33ba09a14fe8.png",
                "description_en": "Transform your Make scenarios into callable AI assistant tools. Fully leverage your existing automated workflows while enabling seamless triggering and interaction with AI systems.",
                "description_zh": "将您的Make场景转换为可调用的AI助手工具。充分利用您现有的自动化工作流，同时实现AI系统无缝触发和与它们交互的功能。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11315?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@makehq/mcp-server"
                    ],
                    "env": {
                        "MAKE_API_KEY": "<your-api-key>",
                        "MAKE_TEAM": "<your-team-id>",
                        "MAKE_ZONE": "<your-zone>"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11317",
                "mcpid": "github.com/dandeliongold/mcp-decent-sampler-drums",
                "name": "Decent Sampler Drums MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Facilitated the creation of DecentSampler drum kit configurations, supporting WAV file analysis and XML generation to ensure accurate sample lengths and well-structured presets.",
                "description_zh": "促进了DecentSampler鼓组配置的创建，支持WAV文件分析和XML生成，以确保准确的采样长度和结构良好的预设。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11317?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@dandeliongold/mcp-decent-sampler-drums"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11319",
                "mcpid": "github.com/isaacphi/mcp-gdrive",
                "name": "Google Drive server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The Google Drive server is an MCP server integrated with Google Drive, offering file management, search, and read functionalities, along with support for read and write operations on Google Sheets. Core features include: searching Google Drive files, reading file content, extracting data from Google Sheets, and updating cell values. This server supports multiple file types and can automatically export Google Workspace files into formats such as Markdown and CSV. Through OAuth authentication, users can securely access Google Drive and Sheets APIs, and integrate them into desktop applications. The project is open-sourced under the MIT license, allowing for free use and modification.",
                "description_zh": "Google Drive 服务器是一个与 Google Drive 集成的 MCP 服务器，提供文件管理、搜索和读取功能，并支持对 Google Sheets 的读写操作。核心功能包括：搜索 Google Drive 文件、读取文件内容、从 Google Sheets 提取数据以及更新单元格值。该服务器支持多种文件类型，并能自动将 Google Workspace 文件导出为 Markdown、CSV 等格式。通过 OAuth 认证，用户可安全访问 Google Drive 和 Sheets API，并集成到桌面应用程序中。项目基于 MIT 许可证开源，允许自由使用和修改。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11319?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@isaacphi/mcp-gdrive"
                    ],
                    "env": {
                        "CLIENT_ID": "<CLIENT_ID>",
                        "CLIENT_SECRET": "<CLIENT_SECRET>",
                        "GDRIVE_CREDS_DIR": "/path/to/config/directory"
                    }
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11325",
                "mcpid": "github.com/paulotaylor/voyp-mcp",
                "name": "Voyp Model Context Protocol server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The Voyp MCP server enables AI systems to integrate with VOYP's calling features, facilitating secure telephone operations through the Model Context Protocol, such as making calls, scheduling appointments, and tracking call statuses.",
                "description_zh": "Voyp MCP服务器使AI系统能够与VOYP的呼叫功能集成，通过模型上下文协议实现安全的电话操作，例如拨打电话、安排预约和跟踪呼叫状态。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11325?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "voyp-mcp"
                    ],
                    "env": {
                        "VOYP_API_KEY": "your-VOYP-api-key"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11348",
                "mcpid": "github.com/MindscapeHQ/mcp-server-raygun",
                "name": "Raygun MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/8208c017ed9a049e79db3c450f3b44c4.png",
                "description_en": "The MCP server for the Raygun API V3 endpoint facilitates interaction with your crash reporting and real user monitoring applications. This server offers comprehensive access to Raygun's API functionalities through the Model Context Protocol.",
                "description_zh": "用于Raygun API V3端点的MCP服务器，可与您的崩溃报告和真实用户监控应用程序进行交互。此服务器通过模型上下文协议（Model Context Protocol）为Raygun的API功能提供全面访问。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11348?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@raygun.io/mcp-server-raygun"
                    ],
                    "env": {
                        "RAYGUN_PAT_TOKEN": "your-pat-token-here"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11353",
                "mcpid": "github.com/suhail-ak-s/mcp-typesense-server",
                "name": "Typesense MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An implementation of an MCP server that enables AI models to discover, search, and analyze data stored in Typesense collections through tools for querying documents, retrieving specific items, and accessing collection statistics.",
                "description_zh": "一种MCP服务器实现，它使AI模型能够通过查询文档、检索特定项目和访问集合统计信息的工具，来发现、搜索和分析存储在Typesense集合中的数据。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11353?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "typesense-mcp-server",
                        "--host",
                        "your-typesense-host",
                        "--port",
                        "8108",
                        "--protocol",
                        "http",
                        "--api-key",
                        "your-api-key"
                    ]
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11362",
                "mcpid": "github.com/zhaoxin34/mcp-server-mysql",
                "name": "MCP Server for MySQL based on NodeJS",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The Model Context Protocol server, which provides read-only access, is utilized for connecting to MySQL databases, enabling large language models to inspect database schemas and execute read-only queries.",
                "description_zh": "提供只读访问权限的Model Context Protocol服务器，用于访问MySQL数据库，使大型语言模型能够检查数据库模式并执行只读查询。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11362?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@benborla29/mcp-server-mysql"
                    ],
                    "env": {
                        "MYSQL_DB": "db_name",
                        "MYSQL_HOST": "127.0.0.1",
                        "MYSQL_PASS": "",
                        "MYSQL_PORT": "3306",
                        "MYSQL_USER": "root"
                    }
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11364",
                "mcpid": "github.com/normal-coder/gitee-mcp-server",
                "name": "Gitee MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The MCP tool server for Gitee supports the management of repository files/branches, Issues, and Pull Requests.",
                "description_zh": "用于 Gitee 的 MCP 工具服务器，支持仓库文件/分支、Issues 和 Pull Requests 的管理。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11364?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "gitee-mcp-server"
                    ],
                    "env": {
                        "GITEE_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11373",
                "mcpid": "github.com/yangkyeongmo/mcp-server-apache-airflow",
                "name": "mcp-server-apache-airflow",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Provide a standardized method for interacting with Apache Airflow in a uniform manner.",
                "description_zh": "提供一种标准化的方式，通过与Apache Airflow 进行标准化交互的方式。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11373?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-server-apache-airflow"
                    ],
                    "env": {
                        "AIRFLOW_HOST": "https://your-airflow-host",
                        "AIRFLOW_PASSWORD": "your-password",
                        "AIRFLOW_USERNAME": "your-username"
                    }
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11374",
                "mcpid": "github.com/launchthatbrand/mcp-graphql",
                "name": "mcp-graphql",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "This implementation provides the capability for LLM to interact with GraphQL APIs. It offers features such as schema introspection and query execution, enabling the model to dynamically discover and utilize GraphQL APIs.",
                "description_zh": "提供llm与GraphQL api交互能力。该实现提供了模式自省和查询执行功能，允许模型动态地发现和使用GraphQL api。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11374?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "mcp-graphql",
                        "--endpoint",
                        "http://localhost:3000/graphql"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11395",
                "mcpid": "github.com/base/base-mcp",
                "name": "Base MCP Server 🔵",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/fe1119ef2c88f2ce0322a5bc5ae11168.png",
                "description_en": "Providing on-chain tools for Claude AI to interact with the Base blockchain and Coinbase API, enabling wallet management, fund transfers, and smart contract deployment.",
                "description_zh": "为Claude AI提供链上工具，以与Base区块链和Coinbase API进行交互，实现钱包管理、资金转账和智能合约部署。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11395?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "base-mcp@latest"
                    ],
                    "env": {
                        "ALCHEMY_API_KEY": "your_alchemy_api_key",
                        "CHAIN_ID": "optional_for_base_sepolia_testnet",
                        "COINBASE_API_KEY_NAME": "your_api_key_name",
                        "COINBASE_API_PRIVATE_KEY": "your_private_key",
                        "COINBASE_PROJECT_ID": "your_project_id",
                        "OPENROUTER_API_KEY": "your_openrouter_api_key",
                        "PINATA_JWT": "your_pinata_jwt",
                        "SEED_PHRASE": "your seed phrase here"
                    }
                },
                "categories": [
                    "支付与交易"
                ],
                "categories_en": [
                    "Payment and Transactions"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11413",
                "mcpid": "github.com/coinpaprika/dexpaprika-mcp",
                "name": "DexPaprika MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/034800e2d911af0d06358a35a54af69f.png",
                "description_en": "The DexPaprika MCP server enables large language models to access real-time and historical data of tokens across multiple blockchains, as well as trading activities and liquidity on decentralized exchanges. Through standardized interfaces, it supports natural language queries to explore market trends, token performance, and DeFi analytics.",
                "description_zh": "DexPaprika MCP服务器允许大型语言模型访问多个区块链上代币的实时和历史数据、去中心化交易所交易活动和流动性。它通过标准化接口，支持自然语言查询以探索市场趋势、代币表现和DeFi分析。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11413?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "dexpaprika-mcp"
                    ]
                },
                "categories": [
                    "支付与交易"
                ],
                "categories_en": [
                    "Payment and Transactions"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11415",
                "mcpid": "github.com/landicefu/divide-and-conquer-mcp-server",
                "name": "Divide and Conquer MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Enable AI agents to utilize a structured JSON format that incorporates task tracking, context retention, and progress monitoring, breaking down complex tasks into manageable components.",
                "description_zh": "启用AI代理使用具有任务跟踪、上下文保留和进度监控功能的结构化JSON格式，将复杂任务分解为可管理的部分。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11415?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@landicefu/divide-and-conquer-mcp-server"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11422",
                "mcpid": "github.com/baranwang/mcp-trends-hub",
                "name": "🔥 Trends Hub",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The MCP protocol-based all-network hotspot trend one-stop aggregation service supports real-time updates and allows for the addition of custom RSS sources with simple configuration.",
                "description_zh": "基于MCP协议的全网热点趋势一站式聚合服务，支持实时更新，简单配置即可添加自定义RSS源。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11422?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-trends-hub@1.6.2"
                    ]
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11427",
                "mcpid": "github.com/kevinwatt/mysql-mcp",
                "name": "MySQL MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "An MCP server integrated with a MySQL database, enabling secure read and write operations through an LLM-driven interface, with support for transaction processing and performance monitoring.",
                "description_zh": "一个与MySQL数据库集成的MCP服务器，通过LLM驱动的接口实现安全的读写操作，并支持事务处理和性能监控。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11427?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@kevinwatt/mysql-mcp"
                    ],
                    "env": {
                        "MYSQL_DB": "your_database",
                        "MYSQL_HOST": "127.0.0.1",
                        "MYSQL_PASS": "",
                        "MYSQL_PORT": "3306",
                        "MYSQL_USER": "root"
                    }
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11428",
                "mcpid": "github.com/kevinwatt/mcp-server-searxng",
                "name": "SearXNG MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "This server offers a privacy-focused metasearch feature by integrating multiple search engines, ensuring no tracking or user profiling is conducted. It supports filtered searches across various categories and languages.",
                "description_zh": "该服务器通过集成多个搜索引擎提供注重隐私的元搜索功能，不会进行跟踪或用户画像，支持各种分类和语言的过滤搜索。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11428?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@kevinwatt/mcp-server-searxng"
                    ]
                },
                "categories": [
                    "搜索与信息检索"
                ],
                "categories_en": [
                    "Search and Information Retrieval"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11430",
                "mcpid": "github.com/kevinwatt/yt-dlp-mcp",
                "name": "yt-dlp-mcp",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "By utilizing the Model Context Protocol (MCP), \"yt-dlp\" is integrated with Large Language Models (LLMs), enabling users to download YouTube content and seamlessly incorporate it with Dive and other MCP-compatible large language models.",
                "description_zh": "通过模型上下文协议（Model Context Protocol）将“yt-dlp”与大型语言模型（LLMs）连接起来，使用户能够下载YouTube内容，并将其与Dive以及其他与MCP兼容的大型语言模型进行集成。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11430?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@kevinwatt/yt-dlp-mcp"
                    ]
                },
                "categories": [
                    "内容抓取"
                ],
                "categories_en": [
                    "Content Scraping"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11431",
                "mcpid": "github.com/VAST-AI-Research/tripo-mcp",
                "name": "Tripo MCP Server",
                "logo_url": "https://developer.qcloudimg.com/mcp/site_icon/ab95e51a2d0727af64cf1293ca539408.png",
                "description_en": "The model context protocol provides an interface between the AI assistant and Tripo AI, enabling the generation of 3D assets from natural language and their subsequent import into Blender.",
                "description_zh": "通过模型上下文协议为人工智能助手和Tripo AI之间提供接口，从而实现从自然语言生成3D资产并将其导入Blender的功能。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11431?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "tripo-mcp"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11458",
                "mcpid": "github.com/JovaniPink/mcp-browser-use",
                "name": "MCP server w/ Browser Use",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "Enable AI agents to interact with web browsers through natural language, featuring capabilities such as automated browsing, form filling, vision-based element detection, and structured JSON responses for system browser control.",
                "description_zh": "启用AI代理通过自然语言与网络浏览器交互，功能包括自动浏览、表单填写、基于视觉的元素检测以及用于系统浏览器控制的结构化JSON响应。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11458?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-server-browser-use"
                    ],
                    "env": {
                        "ANONYMIZED_TELEMETRY": "false",
                        "ANTHROPIC_API_KEY": "",
                        "AZURE_OPENAI_API_KEY": "",
                        "AZURE_OPENAI_ENDPOINT": "",
                        "CHROME_DEBUGGING_HOST": "localhost",
                        "CHROME_DEBUGGING_PORT": "9222",
                        "CHROME_PATH": "",
                        "CHROME_PERSISTENT_SESSION": "false",
                        "CHROME_USER_DATA": "",
                        "GOOGLE_API_KEY": "",
                        "MCP_MAX_ACTIONS_PER_STEP": "5",
                        "MCP_MAX_STEPS": "30",
                        "MCP_MODEL_NAME": "claude-3-5-sonnet-20241022",
                        "MCP_MODEL_PROVIDER": "anthropic",
                        "MCP_TEMPERATURE": "0.3",
                        "MCP_TOOL_CALL_IN_CONTENT": "true",
                        "MCP_USE_VISION": "true",
                        "OPENAI_API_KEY": "",
                        "OPENAI_ENDPOINT": "https://api.openai.com/v1"
                    }
                },
                "categories": [
                    "浏览器自动化"
                ],
                "categories_en": [
                    "Browser Automation"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11466",
                "mcpid": "github.com/l3wi/mcp-lighthouse",
                "name": "Lighthouse MCP",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A model context protocol server that enables Claude to interact with and analyze your Lighthouse.one encrypted portfolio data through secure authentication.",
                "description_zh": "一种模型上下文协议服务器，它通过安全的身份验证，使克劳德能够与您的Lighthouse.one加密投资组合数据进行交互和分析。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11466?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-lighthouse"
                    ]
                },
                "categories": [
                    "支付与交易"
                ],
                "categories_en": [
                    "Payment and Transactions"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11469",
                "mcpid": "github.com/carterlasalle/mac_messages_mcp",
                "name": "Mac Messages MCP",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "A Python bridging tool designed to interact with the macOS Messages application via MCP (Multi-Context Protocol).\nYou can easily install mac-messages-mcp using uvx.",
                "description_zh": "一个用于通过MCP（多上下文协议）与macOS Messages应用交互的Python桥接工具。\n可以使用uvx简单安装mac-messages-mcp。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11469?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mac-messages-mcp"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11602",
                "mcpid": "github.com/upstash/context7",
                "name": "Context7 MCP - Up-to-date Code Docs For Any Prompt",
                "logo_url": "https://avatars.githubusercontent.com/u/74989412?s=48&v=4",
                "description_en": "",
                "description_zh": "Context7 MCP 是一个模型上下文协议（MCP）服务器，旨在为开发者提供最新的代码文档和示例。它通过直接从源代码提取特定版本的文档，确保生成的内容是最新且准确的。Context7 解决了传统 LLMs 依赖于过时或通用信息的问题，避免了过时代码、虚构 API 和旧版本包的通用答案。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11602?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@upstash/context7-mcp"
                    ]
                },
                "categories": [
                    "开发者工具",
                    "内容抓取"
                ],
                "categories_en": [
                    "Developer Tools",
                    "Content Scraping"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11702",
                "mcpid": "github.com/chatmcp/mcp-server-flomo/blob/main/README.md",
                "name": "mcp-server-flomo MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "mcp-server-flomo is a TypeScript-based MCP server primarily designed for writing note content into the Flomo application. Its core functionality involves submitting text notes as a mandatory parameter to Flomo via the `write_note` tool. Developers can install dependencies through npm and build the server, which supports automatic rebuilding during development. The server can be integrated with Claude Desktop by configuring a JSON file to specify run commands and environment variables (such as the Flomo API URL). For debugging, it is recommended to use the MCP Inspector tool to streamline the debugging process.",
                "description_zh": "mcp-server-flomo 是一个基于 TypeScript 的 MCP 服务器，主要用于将笔记内容写入 Flomo 应用。其核心功能是通过 `write_note` 工具将文本笔记作为必填参数提交到 Flomo。开发者可以通过 npm 安装依赖并构建服务器，支持开发时的自动重建。该服务器可与 Claude Desktop 集成，通过配置 JSON 文件指定运行命令和环境变量（如 Flomo API URL）。调试时，推荐使用 MCP Inspector 工具来简化调试过程。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11702?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "@chatmcp/mcp-server-flomo"
                    ],
                    "env": {
                        "FLOMO_API_URL": "https://flomoapp.com/iwh/xxx/xxx/"
                    }
                },
                "categories": [
                    "数据库与文件"
                ],
                "categories_en": [
                    "Databases and Files"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11704",
                "mcpid": "github.com/maxscheijen/mcp-yahoo-finance",
                "name": "MCP Yahoo Finance",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "MCP Yahoo Finance is a server based on the Model Context Protocol (MCP) designed to interact with Yahoo Finance. It offers tools for retrieving stock prices, company information, and other financial data, enabling users to quickly access financial information. Currently in its early development phase, the server's features may be continuously updated. Users can install it via `pip`, `Git`, or `uv`, and it supports integration with Claude Desktop and VSCode. Additionally, the server supports Docker builds and can be tested using MCP Inspector. Its core purpose is to provide developers with a convenient interface for accessing financial data.",
                "description_zh": "MCP Yahoo Finance 是一个基于模型上下文协议（MCP）的服务器，用于与 Yahoo Finance 进行交互。它提供了获取股票价格、公司信息等工具，帮助用户快速查询金融数据。该服务器目前处于早期开发阶段，功能可能会不断更新。用户可以通过 `pip`、`Git` 或 `uv` 进行安装，并支持与 Claude Desktop 和 VSCode 的集成。此外，服务器还支持 Docker 构建，并可通过 MCP Inspector 进行测试。核心用途是为开发者提供便捷的金融数据访问接口。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11704?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-yahoo-finance"
                    ]
                },
                "categories": [
                    "内容抓取"
                ],
                "categories_en": [
                    "Content Scraping"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11709",
                "mcpid": "github.com/TCATools/tca-mcp-server.git",
                "name": "Tencent Cloud Code Analysis (TCA) MCP Server​",
                "logo_url": "https://avatars.githubusercontent.com/u/58844679?s=48&v=4",
                "description_en": "Tencent Cloud Code Analysis MCP Server, based on the MCP protocol, accurately tracks and manages code quality defects, code standards, code security vulnerabilities, and ineffective code discovered through code analysis. It also measures code complexity, duplicate code, and code statistics. ",
                "description_zh": "基于MCP协议的腾讯云代码分析MCP Server，精准跟踪管理代码分析发现的代码质量缺陷、代码规范、代码安全漏洞、无效代码，以及度量代码复杂度、重复代码、代码统计。新增测试",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11709?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "-p",
                        "tca-mcp-server@latest",
                        "tca-mcp-stdio"
                    ],
                    "env": {
                        "TCA_TOKEN": "<TCA_TOKEN>",
                        "TCA_USER_NAME": "<TCA_USER_NAME>"
                    }
                },
                "categories": [
                    "腾讯产品MCP",
                    "开发者工具"
                ],
                "categories_en": [
                    "Tencent Products MCP",
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11710",
                "mcpid": "www.npmjs.com/package/cls-mcp-server",
                "name": "Tencent Cloud Log Service",
                "logo_url": "https://developer.qcloudimg.com/operation/attachment/900005/20250625-63bf9149.png",
                "description_en": "Query log data stored in CLS (Cloud Log Service) through MCP Server to integrate the big model platform/tools with log data. For example, using natural language to query logs reduces the complexity of log queries; integrating it into O&M troubleshooting processes enables intelligent analysis of system anomalies.",
                "description_zh": "通过 MCP Server 查询日志服务 CLS 中存储的日志数据，以实现大模型平台/工具与日志数据的结合。例如使用自然语言查询日志，降低日志查询复杂度；整合至运维排障流程中，智能分析系统异常。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11710?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "cls-mcp-server@latest"
                    ],
                    "env": {
                        "MAX_LENGTH": "15000",
                        "TENCENTCLOUD_API_BASE_HOST": "tencentcloudapi.com",
                        "TENCENTCLOUD_REGION": "ap-guangzhou",
                        "TENCENTCLOUD_SECRET_ID": "YOUR_TENCENT_SECRET_ID",
                        "TENCENTCLOUD_SECRET_KEY": "YOUR_TENCENT_SECRET_KEY",
                        "TRANSPORT": "stdio"
                    }
                },
                "categories": [
                    "腾讯产品MCP"
                ],
                "categories_en": [
                    "Tencent Products MCP"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11716",
                "mcpid": "cnb.cool/cnb/tools/cnb-mcp-server",
                "name": "CNB MCP Server User Guide",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The CNB MCP Server is a large language model toolkit that supports the MCP protocol, designed to communicate via standard input/output (STDIO). Users can start the server by configuring `mcpServers`, specifying the API base URL and access token. This server requires Node.js version 18 or higher and provides a detailed development guide, including installing dependencies, generating type definitions, configuring environment variables, and building the project. Additionally, users can utilize the `@modelcontextprotocol/inspector` tool for previewing and debugging. The primary purpose of this server is to offer developers a flexible and extensible interface for interacting with CNB's large language models.",
                "description_zh": "CNB MCP 服务器是一个支持 MCP 协议的大语言模型工具包，旨在通过标准输入/输出（STDIO）进行通信。用户可以通过配置 `mcpServers` 来启动服务器，指定 API 基础 URL 和访问令牌。该服务器需要 Node.js 版本不低于 18，并提供详细的开发指南，包括安装依赖、生成类型定义、配置环境变量和构建项目。此外，用户可以使用 `@modelcontextprotocol/inspector` 工具进行预览和调试。该服务器的主要用途是为开发者提供一个灵活且可扩展的接口，以便与 CNB 的大语言模型进行交互。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11716?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "-p",
                        "@cnbcool/mcp-server",
                        "cnb-mcp-stdio"
                    ],
                    "env": {
                        "API_BASE_URL": "<BASE_URL>",
                        "API_TOKEN": "<YOUR_TOKEN>"
                    }
                },
                "categories": [
                    "腾讯产品MCP"
                ],
                "categories_en": [
                    "Tencent Products MCP"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11727",
                "mcpid": "github.com/neondatabase-labs/mcp-server-neon",
                "name": "Neon MCP Server",
                "logo_url": "https://cloudcache.tencent-cloud.com/qcloud/ui/static/other_external_resource/61e4ce1f-c0db-466f-a917-3bb880259cc7.png",
                "description_en": "The Neon MCP Server is an open-source tool designed to facilitate interaction with Neon Postgres databases through natural language. Built on the Model Context Protocol (MCP), it translates natural language requests into Neon API calls, streamlining database management tasks such as project creation, branching, query execution, and database migrations. The server is tailored for non-developers, offering intuitive conversational commands that eliminate the need for writing SQL or directly manipulating APIs. Users can set up the MCP Server either remotely or locally, with authentication options including OAuth or API keys. While the Neon MCP Server is well-suited for local development and IDE integration, it is not recommended for production environments to prevent unauthorized alterations.",
                "description_zh": "Neon MCP 服务器是一个开源工具，旨在通过自然语言与 Neon Postgres 数据库进行交互。它基于模型上下文协议（MCP），将自然语言请求转换为 Neon API 调用，简化了数据库管理任务，如创建项目、分支、执行查询和数据库迁移。该服务器支持非开发人员使用，提供直观的对话式命令，无需编写 SQL 或直接操作 API。用户可以通过远程或本地方式设置 MCP 服务器，并使用 OAuth 或 API 密钥进行身份验证。Neon MCP 服务器适用于本地开发和 IDE 集成，但不建议在生产环境中使用，以避免未经授权的更改。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11727?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "npx",
                    "args": [
                        "-y",
                        "mcp-remote",
                        "https://mcp.neon.tech/mcp"
                    ]
                },
                "categories": [
                    "开发者工具"
                ],
                "categories_en": [
                    "Developer Tools"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11728",
                "mcpid": "github.com/jubaoliang/mcp-server-cvm",
                "name": "mcp-server-cvm",
                "logo_url": "https://developer.qcloudimg.com/operation/attachment/900005/20250724-3ff26b01.png",
                "description_en": "Implementation of Tencent Cloud CVM (Cloud Virtual Machine) MCP server for managing Tencent Cloud instances and network resources.",
                "description_zh": "腾讯云 CVM（Cloud Virtual Machine）MCP Server 实现，用于在支持 MCP 的客户端中直接管理腾讯云实例与网络资源。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11728?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-server-cvm"
                    ],
                    "env": {
                        "TENCENTCLOUD_REGION": "YOUR_REGION_HERE",
                        "TENCENTCLOUD_SECRET_ID": "YOUR_SECRET_ID_HERE",
                        "TENCENTCLOUD_SECRET_KEY": "YOUR_SECRET_KEY_HERE"
                    }
                },
                "categories": [
                    "腾讯产品MCP"
                ],
                "categories_en": [
                    "Tencent Products MCP"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11729",
                "mcpid": "github.com/jubaoliang/mcp-server-tat",
                "name": "mcp-server-tat",
                "logo_url": "https://developer.qcloudimg.com/operation/attachment/900005/20250724-e48750d0.png",
                "description_en": "",
                "description_zh": "腾讯云 TAT（TencentCloud Automation Tools）MCP Server，用于在支持 MCP 的客户端中直接在腾讯云实例上执行命令。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11729?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-server-tat"
                    ],
                    "env": {
                        "TENCENTCLOUD_REGION": "YOUR_REGION_HERE",
                        "TENCENTCLOUD_SECRET_ID": "YOUR_SECRET_ID_HERE",
                        "TENCENTCLOUD_SECRET_KEY": "YOUR_SECRET_KEY_HERE"
                    }
                },
                "categories": [
                    "腾讯产品MCP"
                ],
                "categories_en": [
                    "Tencent Products MCP"
                ],
                "preinstalled": false,
                "tags": []
            },
            {
                "id": "mcp11730",
                "mcpid": "github.com/jubaoliang/mcp-server-as",
                "name": "mcp-server-as",
                "logo_url": "https://developer.qcloudimg.com/operation/attachment/900005/20250724-83bb8848.png",
                "description_en": "Tencent Cloud AS MCP Server is a tool designed for managing Tencent Cloud Auto Scaling groups and related resources. Its primary functions encompass the full lifecycle management of Auto Scaling groups (including creation, modification, enabling, and disabling), the execution of scaling policies (supporting manual scaling up and down), and capacity management (modifying desired capacity).",
                "description_zh": "腾讯云 AS MCP 服务器是一个用于管理腾讯云自动伸缩组及相关资源的工具。其主要功能包括自动伸缩组的全生命周期管理（创建、修改、启用和禁用）、伸缩策略的执行（支持手动扩容和缩容）以及容量管理（修改期望容量）。",
                "official_url": "https://cloud.tencent.com/developer/mcp/server/11730?fromchannel=cb",
                "readme_url": "",
                "install_prompt_en": "",
                "install_prompt_zh": "",
                "install_commands": {
                    "command": "uvx",
                    "args": [
                        "mcp-server-as"
                    ],
                    "env": {
                        "TENCENTCLOUD_REGION": "YOUR_REGION_HERE",
                        "TENCENTCLOUD_SECRET_ID": "YOUR_SECRET_ID_HERE",
                        "TENCENTCLOUD_SECRET_KEY": "YOUR_SECRET_KEY_HERE"
                    }
                },
                "categories": [
                    "腾讯产品MCP"
                ],
                "categories_en": [
                    "Tencent Products MCP"
                ],
                "preinstalled": false,
                "tags": []
            }
        ],
        "mcp_market_github": "https://cnb.cool/codebuddy/mcp-market",
        "mcp_install_prompt_en": "I want to build a MCP plugin that can solve complex math problems, perform unit conversions, and handle scientific notation.\n",
        "mcp_install_prompt_zh": "我想构建一个MCP插件，它可以解决复杂的数学问题，执行单位转换和处理科学记数法。\n",
        "mac_npx_install_url": "https://acc-1258344699.cos.accelerate.myqcloud.com/web//mcp_market/install_scripts/mac_npx_install.sh",
        "mac_uvx_install_url": "https://acc-1258344699.cos.accelerate.myqcloud.com/web//mcp_market/install_scripts/mac_uvx_install.sh",
        "windows_npx_install_url": "https://acc-1258344699.cos.accelerate.myqcloud.com/web//mcp_market/install_scripts/windows_npx_install.bat",
        "windows_uvx_install_url": "https://acc-1258344699.cos.accelerate.myqcloud.com/web//mcp_market/install_scripts/windows_uvx_install.bat"
    }
}